{
	"extensionName": {"message": "SEO Checker"},
	"extensionDescription": {"message": "SEO Checker findet SEO-, Geschwindigkeits- und Sicherheitsprobleme, bevor es Ihre Website-Besucher tun"},
	"SEOChecker": {"message": "SEO Checker"},
	"byKeywordsEverywhere": {"message": "von Keywords Everywhere"},
	"Main": {"message": "Haupt"},
	"CrawlerRestrictions": {"message": "Crawler-Beschr\u00e4nkungen"},
	"InternalPageDepthLimit": {"message": "Wie tief m\u00f6chten Sie Seiten durchsuchen?"},
	"CrawlStartPageOnly": {"message": "Nur Startseite durchsuchen"},
	"PagesOneLinkFromStartPage": {"message": "Alle Seiten, die einen Link von der Startseite entfernt sind"},
	"PagesTwoLinksFromStartPage": {"message": "Alle Seiten, die zwei Links von der Startseite entfernt sind"},
	"PagesThreeLinksFromStartPage": {"message": "Alle Seiten, die drei Links von der Startseite entfernt sind"},
	"Unrestricted": {"message": "Keine Begrenzungen der Seitentiefe"},
	"UrlLimit": {"message": "Maximale Anzahl der zu durchsuchenden URLs"},
	"CrawlFoldersAboveStartUrl": {"message": "Durchsuchen von Ordnern \u00fcber dem Startordner erlauben?"},
	"CrawlSubdomainsOfStartURL": {"message": "Durchsuchen von Subdomains der eingegebenen URL erlauben?"},
	"UrlPatternsToExcludeFromCrawl": {"message": "Von der Durchsuchung auszuschlie\u00dfende URL-Muster"},
	"textareaUrlPatternsPlaceholder": {"message": "Geben Sie pro Zeile ein Muster ein"},
	"UrlTypeChecks": {"message": "URL-Typ-Pr\u00fcfungen"},
	"SpeedUpCrawlsBySkipUrlCheck": {"message": "Deaktivieren Sie URLs, die Sie nicht durchsuchen m\u00f6chten. Dies beschleunigt die Durchsuchungen."},
	"CrawlNoIndexedPages": {"message": "\u00dcberpr\u00fcfung von No-Indexed Seiten"},
	"CheckInternalLinks": {"message": "Interne Links durchsuchen?"},
	"CheckExternalLinks": {"message": "Externe Links durchsuchen?"},
	"CheckImages": {"message": "Bilder durchsuchen & pr\u00fcfen?"},
	"CheckJavaScript": {"message": "JavaScript durchsuchen & pr\u00fcfen?"},
	"CheckCss": {"message": "CSS durchsuchen & pr\u00fcfen?"},
	"CheckRobotFile": {"message": "robots.txt Dateien durchsuchen & pr\u00fcfen?"},
	"Check404Pages": {"message": "404-Seiten durchsuchen & pr\u00fcfen?"},
	"UserAgent": {"message": "Geben Sie den UserAgent f\u00fcr die Durchsuchung unten ein"},
	"FetchBehaviour": {"message": "Abrufverhalten"},
	"devtoolUseWithXRequestedHeader": {"message": "Wenn URLs abgerufen werden, sendet SEO Checker den standardm\u00e4\u00dfigen User-Agent-Header des Browsers. Um dies zu \u00e4ndern, verwenden Sie Chrome DevTools. SEO Checker sendet auch einen X-Requested-With-Header, der mit SEO Checker beginnt, damit Sie ihn erkennen k\u00f6nnen."},
	"ResponseTimeout": {"message": "Maximale Wartezeit auf die URL-Antwort (ms) (1000ms = 1 Sekunde)"},
	"MaxUrlPerSecond": {"message": "Maximale URLs pro Sekunde zu durchsuchen"},
	"RestoreDefaultSettings": {"message": "Alle Einstellungen auf Standardwerte zur\u00fccksetzen"},
	"CrawlerSettingsRestoredMsg": {"message": "Die Crawler-Einstellungen wurden auf ihre Standardwerte zur\u00fcckgesetzt"},
	"Dashboard": {"message": "Startseite"},
	"SEO": {"message": "SEO"},
	"Speed": {"message": "Geschw"},
	"Security": {"message": "Sicherheit"},
	"Explore": {"message": "Erkunden"},
	"SeoAnalysis": {"message": "SEO-Analyse"},
	"SpeedAnalysis": {"message": "Geschwindigkeitsanalyse"},
	"SecurityAnalysis": {"message": "Sicherheitsanalyse"},
	"ExploreWebsite": {"message": "Website erkunden"},
	"WebsiteAuditReport": {"message": "Pr\u00fcfbericht"},
	"ExportToCSV": {"message": "Alle Daten in eine CSV-Datei exportieren"},
	"IsYourWebsiteFastSecureSeoFriendly": {"message": "\u00dcberpr\u00fcfen Sie Ihre Website auf SEO, Geschwindigkeit und Sicherheit"},
	"inputWebsiteUrlPlaceholder": {"message": "Geben Sie hier die URL Ihrer Website ein, z. B. www.example.com"},
	"StartCrawl": {"message": "Durchsuchung starten"},
	"StartNewCrawl": {"message": "Neue Durchsuchung starten"},
	"UrlsCrawled": {"message": "Insgesamt durchsuchte URLs"},
	"PagesCrawled": {"message": "Insgesamt durchsuchte Seiten"},
	"BrokenUrls": {"message": "Insgesamt defekte URLs"},
	"OverallScore": {"message": "Gesamtpunktzahl des SEO Checkers"},
	"auditSummaryFor": {"message": "Pr\u00fcfzusammenfassung f\u00fcr"},
	"WebsiteScore": {"message": "Gesamtpunktzahl des SEO Checkers"},
	"CategoryScores": {"message": "Kategoriebewertungen"},
	"UrlsChecked": {"message": "Insgesamt durchsuchte URLs"},
	"WebsiteCheckedOn": {"message": "Website \u00fcberpr\u00fcft am"},
	"CrawledUrls": {"message": "Durchsuchte URLs"},
	"SEOResults": {"message": "SEO Ergebnisse"},
	"SpeedResults": {"message": "Geschwindigkeitsergebnisse"},
	"SecurityResults": {"message": "Sicherheitsergebnisse"},
	"notificationBeforeCrawlingStart": {"message": "Der Crawl wird bald beginnen..."},
	"CheckingPages": {"message": "Seiten werden durchsucht & \u00fcberpr\u00fcft..."},
	"ChecksPerSecond": {"message": "Durchsuchungen pro Sekunde"},
	"UrlsToCheck": {"message": "Insgesamt verbleibende URLs zur \u00dcberpr\u00fcfung"},
	"FailedResponses": {"message": "Fehlschl\u00e4ge"},
	"DepthExplored": {"message": "Durchsuchte Tiefe"},
	"Duration": {"message": "Verstrichene Zeit"},
	"FinishSeeResults": {"message": "Durchsuchung stoppen & Ergebnisse ansehen"},
	"onlyGetPostAllowed": {"message": "nur GET oder POST erlaubt"},
	"UnexpectedError": {"message": "Unerwarteter Fehler"},
	"CssSyntaxError": {"message": "Fehler in der CSS-Syntax"},
	"UrlNotDefined": {"message": "URL ist nicht definiert"},
	"UrlIsEmpty": {"message": "URL ist leer"},
	"HostNotFound": {"message": "Host nicht gefunden"},
	"HostnameMissing": {"message": "Hostname fehlt"},
	"ConnectionError": {"message": "Verbindungsfehler"},
	"ErrorFailedWith": {"message": "Fehler: Fehlgeschlagen mit"},
	"UrlIsNotHtmlPage": {"message": "URL ist keine HTML-Seite"},
	"UrlSideError": {"message": "Fehler auf Seiten der URL"},
	"urlProcessingInProgress": {"message": "URL-Verarbeitung l\u00e4uft"},
	"urlsNotFound": {"message": "URLs nicht gefunden"},
	"ReportIdMissing": {"message": "Berichts-ID fehlt"},
	"URLs": {"message": "URLs"},
	"Pages": {"message": "Seiten"},
	"Assets": {"message": "Ressourcen"},
	"Redirects": {"message": "Weiterleitungen"},
	"Others": {"message": "Andere"},
	"UnknownCategory": {"message": "unbekannte Kategorie"},
	"FilterTestError": {"message": "Fehler in der Testfunktion"},
	"links": {"message": "links"},
	"headers": {"message": "kopfzeilen"},
	"refresh": {"message": "aktualisieren"},
	"html": {"message": "HTML"},
	"copy": {"message": "kopieren"},
	"outOf": {"message": "von"},
	"MaxRedirectsReached": {"message": "Maximale Weiterleitungen erreicht"},
	"UrlProcessingFailed": {"message": "URL-Verarbeitung fehlgeschlagen"},
	"NoCanonicalTagHeaderFound": {"message": "Kein kanonischer Tag oder Kopfzeile gefunden"},
	"MultipleCanonicalHeadersFound": {"message": "Mehrere kanonische Kopfzeilen gefunden"},
	"MultipleCanonicalTagsFound": {"message": "Mehrere kanonische Tags gefunden"},
	"CanonicalHeadersTagsUsedAtSameTime": {"message": "Kanonische Kopfzeilen und Tags gleichzeitig verwendet"},
	"UnknownError": {"message": "Unbekannter Fehler"},
	"CanonicalShouldBeAbsoluteError": {"message": "Kanonische $1 URL ist relativ, sollte jedoch absolut sein"},
	"CanonicalEmptyUrlError": {"message": "Kanonischer $1 mit leerer URL"},
	"FromPageIsNotAvailable": {"message": "Ausgangsseite ist nicht verf\u00fcgbar"},
	"PageTitles": {"message": "Seitentitel"},
	"SetPageTitles": {"message": "Sind Seitentitel festgelegt?"},
	"SetPageTitlesSummary": {"message": "Stellen Sie sicher, dass jede Seite auf Ihrer Website einen Titel hat, der klar beschreibt, worum es geht. Das ist super wichtig, denn Suchmaschinen, wie Google, achten sehr auf Titel, wenn sie entscheiden, wie relevant Ihre Seite f\u00fcr eine Suchanfrage ist. Au\u00dferdem kann ein guter Titel mehr Menschen dazu bringen, auf Ihre Seite zu klicken, wenn sie diese in Suchergebnissen oder in sozialen Medien sehen. Sie k\u00f6nnen Ihren Seitentitel in HTML festlegen, indem Sie ihn zwischen `<title>`-Tags im `<head>`-Bereich Ihrer Seite platzieren, so wie das: `<title>Ihr erstaunlicher Seitentitel</title>`.\n"},
	"UseOptimalLengthTitles": {"message": "Sind die Titell\u00e4ngen optimal?"},
	"UseOptimalLengthTitlesSummary": {"message": "Es ist wichtig, die L\u00e4nge Ihrer Seitentitel genau richtig zu bekommen. Sind sie zu kurz, geben sie m\u00f6glicherweise nicht genug Informationen f\u00fcr Menschen und Suchmaschinen. Sind sie zu lang, werden sie nicht vollst\u00e4ndig in den Suchergebnissen angezeigt, was auch nicht hilfreich ist. Ein Zielbereich von **zwischen 10 und 60 Zeichen** f\u00fcr die Titell\u00e4nge ist ein s\u00fc\u00dfer Punkt, der dazu beitr\u00e4gt, dass Ihre Seiten in Suchergebnissen hervorstechen und sicherstellt, dass Suchmaschinen wissen, worum es auf Ihren Seiten geht.\n"},
	"UseUniqueTitles": {"message": "Sind Seitentitel einzigartig?"},
	"UseUniqueTitlesShortSummary": {"message": "Stellen Sie sicher, dass jede Seite auf Ihrer Website einen einzigartigen Titel hat. Die Verwendung desselben Titels auf mehreren Seiten kann Suchmaschinen verwirren und sogar das Suchranking Ihrer Website beeintr\u00e4chtigen. Halten Sie also jeden Titel unterschiedlich, um klar zu bleiben!\n"},
	"UseUniqueTitlesSummary": {"message": "Jede Seite auf Ihrer Website sollte ihren eigenen einzigartigen Titel haben. Warum? Nun, wenn Titel in Suchergebnissen erscheinen und mehrere Seiten denselben Titel haben, kann das sowohl Menschen als auch Suchmaschinen wirklich verwirren. Die Menschen wissen m\u00f6glicherweise nicht, auf welche Seite sie klicken sollen, und Suchmaschinen k\u00f6nnen Schwierigkeiten haben herauszufinden, welche Seite eine Suchanfrage am besten beantwortet. Da jede Seite, die Sie von Menschen gefunden haben wollen, einzigartige Inhalte haben sollte, k\u00f6nnen Sie diese Probleme vermeiden, indem Sie sicherstellen, dass jeder Titel spezifisch und genau auf das, was auf der Seite ist, zutrifft.\n"},
	"PageHeadings": {"message": "Seiten\u00fcberschriften"},
	"SetH1Headings": {"message": "Hat die Seite H1-\u00dcberschriften?"},
	"H1Headings": {"message": "H1-\u00dcberschrift"},
	"SetH1HeadingsSummary": {"message": "Jede Seite Ihrer Website ben\u00f6tigt eine klare H1-\u00dcberschrift, damit sowohl Menschen als auch Suchmaschinen wissen, worum es auf der Seite geht. Denken Sie daran wie an den Haupttitel eines Kapitels in einem Buch - es fasst den Inhalt sch\u00f6n zusammen. In HTML ist das H1 Ihre \u00fcbergeordnete \u00dcberschrift, die wichtigste, gefolgt von anderen \u00dcberschriften wie H2, H3 usw., die weniger wichtig sind. Ihr H1 sollte pr\u00e4gnant und informativ sein, um Ihre Leser gleich zu Beginn zu f\u00fchren. Suchmaschinen schauen auch auf diese \u00dcberschriften, insbesondere auf die Schl\u00fcsselw\u00f6rter in ihnen, um herauszufinden, wie sie Ihre Seite einstufen sollen. Sie k\u00f6nnen eine H1-\u00dcberschrift auf Ihrer Seite mit dem `<h1>`-Tag hinzuf\u00fcgen, so: `<h1>\u00dcber unser Unternehmen </h1>`.\n"},
	"UseOneH1HeadingPerPage": {"message": "Hat die Seite mehr als ein H1-Tag?"},
	"UseOneH1HeadingPerPageSummary": {"message": "Versuchen Sie, sich auf nur eine H1-\u00dcberschrift pro Seite zu beschr\u00e4nken, um es sowohl f\u00fcr Benutzer als auch f\u00fcr Suchmaschinen super klar zu machen, worum es beim Hauptthema geht. Mehr als eine H1 kann Leser verwirren, welche \u00dcberschrift wirklich die Seite zusammenfasst. Wenn Sie es bei einer H1 belassen, gibt es keine Verwirrung. Sowohl Bing als auch Mozilla empfehlen die Verwendung einer einzigen H1 pro Seite, um die Struktur Ihres Dokuments klar darzustellen. W\u00e4hrend Google vorschl\u00e4gt, \u00dcberschriften zu verwenden, die die Struktur Ihres Inhalts genau widerspiegeln, kann das Vereinfachen Ihrer Seite durch die Wahl eines Haupt `<h1>` Tags und dann das Organisieren anderer Informationen unter `<h2>`, `<h3>` usw. wirklich dazu beitragen, jegliche Verwirrung zu beseitigen. Dieser Ansatz hilft Ihnen, Ihren Inhalt ordentlich zu gestalten und macht es einfacher zu folgen.\n"},
	"UseOptimalLengthH1Headings": {"message": "Sind die L\u00e4ngen der H1 optimal?"},
	"UseOptimalLengthH1HeadingsSummary": {"message": "Stellen Sie sicher, dass Ihre H1-\u00dcberschrift auf jeder Seite nicht zu lang ist. Dies hilft sowohl Menschen als auch Suchmaschinen schnell zu erfassen, worum es auf Ihrer Seite geht. Google schl\u00e4gt vor, \u00dcberschriften kurz zu halten, damit Leser Ihren Inhalt leicht scannen k\u00f6nnen. Ist eine \u00dcberschrift zu lang, k\u00f6nnte sie einfach ein Absatztext sein, der f\u00e4lschlicherweise als \u00dcberschrift gekennzeichnet wurde. Eine gute Faustregel ist, Ihre H1-\u00dcberschriften unter 70 Zeichen zu halten. Das h\u00e4lt die Dinge klar und auf den Punkt.\n"},
	"UseUniqueH1Headings": {"message": "Sind H1-Tags einzigartig?"},
	"UseUniqueH1HeadingsSummary": {"message": "Jede Seite Ihrer Website sollte eine einzigartige H1-\u00dcberschrift haben. Warum? Weil jede Seite mit ihrem eigenen Inhalt herausstechen sollte und die H1-\u00dcberschrift wie ein Wegweiser ist, der Benutzern und Suchmaschinen sagt, worum es auf der Seite geht. Wenn mehrere Seiten dieselbe H1-\u00dcberschrift haben, k\u00f6nnte es so aussehen, als ob Sie denselben Inhalt wiederholen, was Ihre Suchrankings beeintr\u00e4chtigen kann. Denken Sie an jede H1 als eine Chance, das einzigartige Thema jeder Seite hervorzuheben. Wenn Sie feststellen, dass einige Seiten dieselbe H1 teilen, ist es eine gute Idee, jede \u00dcberschrift so anzupassen, dass sie besser zum spezifischen Inhalt ihrer Seite passt. Auf diese Weise beseitigen Sie jegliche Verwirrung und nutzen die Gelegenheit, Ihr SEO zu verbessern.\n"},
	"PageDescriptions": {"message": "Seitenbeschreibungen"},
	"SetPageDescriptions": {"message": "Sind Seitenbeschreibungen festgelegt?"},
	"SetPageDescriptionsSummary": {"message": "Stellen Sie sicher, dass jede Seite auf Ihrer Website eine Beschreibung hat, die zusammenfasst, worum es geht. Diese Beschreibungen erscheinen in Suchergebnissen und wenn Ihre Seiten in sozialen Medien geteilt werden. Eine gute Beschreibung kann wirklich die Anzahl der Personen erh\u00f6hen, die auf Ihre Seite klicken. Beachten Sie jedoch, dass Suchmaschinen, wenn sie denken, dass ein anderer Ausschnitt Ihrer Seite besser zu einer Suchanfrage passt, diesen stattdessen anzeigen werden. Au\u00dferdem ist es gut zu wissen, dass Google diese Beschreibungen nicht als Faktor f\u00fcr das Ranking Ihrer Seite wertet. Um eine Beschreibung Ihrer Seite hinzuzuf\u00fcgen, f\u00fcgen Sie einfach ein Beschreibung-Meta-Tag im `<head>` Bereich Ihres HTML hinzu, so: `<meta name='description' content='Die Beschreibung der Seite'>`.\n"},
	"UseOptimalLengthDescriptions": {"message": "Sind die L\u00e4ngen der Beschreibungen optimal?"},
	"UseOptimalLengthDescriptionsSummary": {"message": "Halten Sie Ihre Seitenbeschreibungen genau richtig - nicht zu lang und nicht zu kurz. Sind sie zu lang, werden nur Teile davon in Suchergebnissen angezeigt, und sind sie zu kurz, geben sie m\u00f6glicherweise nicht genug Informationen, um n\u00fctzlich zu sein. Eine gute L\u00e4nge, auf die Sie zielen sollten, liegt zwischen 100 und 320 Zeichen. Auf diese Weise sind Ihre Beschreibungen hilfreich und passen gut in Suchergebnisse.\n"},
	"UseUniqueDescriptions": {"message": "Sind Beschreibungen einzigartig?"},
	"DuplicateContent": {"message": "Doppelter Inhalt"},
	"SetCanonicalUrls": {"message": "Sind kanonische URLs festgelegt?"},
	"SetCanonicalUrlsSummary": {"message": "Es ist ein kluger Schritt, eine g\u00fcltige kanonische URL f\u00fcr jede Seite auf Ihrer Website anzugeben, um besser zu steuern, wie Suchmaschinen mit doppelten URLs umgehen. Grunds\u00e4tzlich, wenn es mehrere URLs auf Ihrer Website gibt, die denselben oder sehr \u00e4hnlichen Inhalt zeigen, w\u00e4hlen Suchmaschinen eine Haupt-URL aus, bekannt als die *kanonische URL*. Dies ist die URL, die h\u00e4ufiger gecrawlt wird, in Suchergebnissen erscheint und alle Backlinks, die auf die Duplikate zeigen, werden behandelt, als ob sie auf diese kanonische URL zeigen. \n\n Das Festlegen der kanonischen URL einer Seite auf sich selbst, was wir 'Selbst-Kanonisierung' nennen, ist sowohl g\u00fcltig als auch hilfreich. Es hilft, Probleme wie doppelten Inhalt zu vermeiden, die auftreten k\u00f6nnen, wenn Seiten mit Tracking-Parametern in der URL verlinkt sind. Um eine kanonische URL einzurichten, k\u00f6nnen Sie entweder einen `<link rel='canonical' href='...'>` Tag im `<head>` Bereich Ihrer Seite hinzuf\u00fcgen (was die h\u00e4ufigste Methode ist) oder einen Link: <...>; rel='canonical' Header in den Antwort-Headern der Seite hinzuf\u00fcgen. \n\n Google empfiehlt die Verwendung absoluter URLs (die den http-Teil enthalten) anstelle von relativen (die ihn nicht enthalten). Seien Sie jedoch vorsichtig - Suchmaschinen k\u00f6nnen Ihre kanonische URL ignorieren, wenn Sie mehr als eine pro Seite vorschlagen oder wenn die vorgeschlagene URL defekt ist, weiterleitet, nicht indexierbar ist oder nicht kanonisch ist. \n\n Auch bei exakten Duplikaten sollten Sie \u00fcberlegen, ob es vielleicht besser w\u00e4re, 301-Weiterleitungen anstelle von kanonischen URLs zu verwenden, um die Duplikate zu konsolidieren. Dies kann die Struktur Ihrer Website noch effektiver straffen."},
	"AvoidDuplicatePageContent": {"message": "Gibt es doppelten Seiteninhalt?"},
	"AvoidDuplicatePageContentSummary": {"message": "Stellen Sie sicher, dass jede Seite auf Ihrer Website einzigartigen Inhalt bietet, der nirgendwo anders auf Ihrer Seite zu finden ist. Suchmaschinen m\u00f6gen es nicht, wenn Seiten zu \u00e4hnlich sind; sie k\u00f6nnen deren Ranking senken oder sie \u00fcberhaupt nicht anzeigen, weil es f\u00fcr Benutzer nicht n\u00fctzlich ist, immer wieder dasselbe in Suchergebnissen zu sehen. Au\u00dferdem k\u00f6nnen doppelte Seiten die SEO-Vorteile von Backlinks schw\u00e4chen. Es ist viel effektiver, alle Backlinks auf eine einzige URL zu richten, anstatt sie \u00fcber mehrere Duplikate zu verstreuen. Dar\u00fcber hinaus, wenn Suchmaschinen ihre Zeit damit verbringen, Duplikate zu crawlen, k\u00f6nnten sie es verpassen, Ihre wichtigeren Seiten zu indizieren. \n\n Sie k\u00f6nnen dieses Problem beheben, indem Sie doppelte Seiten in eine zusammenf\u00fchren. Dies k\u00f6nnen Sie tun, indem Sie sie auf eine einzige URL umleiten oder kanonische Tags verwenden, um auf die Hauptseite zu verweisen, die Sie priorisieren m\u00f6chten. \n\n "},
	"PageContent": {"message": "Seiteninhalt"},
	"AvoidThinContentPages": {"message": "Gibt es Seiten mit wenig Inhalt?"},
	"AvoidThinContentPagesSummary": {"message": "Konzentrieren Sie sich darauf, Seiten zu erstellen, die informationsreich sind, anstatt Seiten mit wenig Inhalt. Suchmaschinen neigen dazu, Seiten zu bestrafen, die nicht viel Wert bieten, weil Menschen Ergebnisse bevorzugen, die informativ und von hoher Qualit\u00e4t sind. Au\u00dferdem f\u00f6rdert guter Inhalt auf nat\u00fcrliche Weise Ihr Suchranking, indem er mehr Backlinks und soziale Shares anzieht. Ein praktischer Tipp ist, auf mindestens 300 W\u00f6rter pro Seite zu zielen. Dies ist eine gute Grundlage, um sicherzustellen, dass Ihre Seiten nicht als zu inhaltsarm betrachtet werden. \n\n "},
	"SetImageAltText": {"message": "Sind Bild-ALT-Texte festgelegt?"},
	"SetImageAltTextSummary": {"message": "Jedes Bild auf Ihrer Seite sollte eine klare Beschreibung im `alt`-Attribut haben. Dieser `alt`-Text ist nicht nur da, um Platz zu f\u00fcllen; er hilft tats\u00e4chlich, Ihr Suchranking zu verbessern, da Suchmaschinen ihn f\u00fcr relevante Schl\u00fcsselw\u00f6rter betrachten. Es ist auch entscheidend f\u00fcr die Zug\u00e4nglichkeit Ihrer Website. Screenreader, die visuell beeintr\u00e4chtigten Benutzern helfen, verlassen sich auf `alt`-Text, um zu verstehen, was ein Bild zeigt. \n\n Insbesondere f\u00fcr Bilder, die als Links verwendet werden, ist es wichtig, beschreibenden `alt`-Text zu verwenden. So k\u00f6nnen sowohl Screenreader als auch Suchmaschinen verstehen, wohin der Link f\u00fchrt. Um `alt`-Text hinzuzuf\u00fcgen, f\u00fcgen Sie einfach ein `alt`-Attribut direkt in Ihr Bild-Tag ein, wie dieses: `<img src='example.png' alt='Beschreibung'>`. \n\n Wenn ein Bild nur zur Dekoration dient und keine Informationen hinzuf\u00fcgt, setzen Sie das `alt`-Attribut auf leer (`alt=''`). Dies sagt Screenreadern, das Bild zu \u00fcberspringen und h\u00e4lt das Benutzererlebnis frei von Unordnung. \n\n "},
	"SetMobileScaling": {"message": "Ist mobile Skalierung festgelegt?"},
	"SetMobileScalingSummary": {"message": "Stellen Sie sicher, dass Ihre Website mobilfreundlich ist, indem Sie die richtigen Seitenskalierungseigenschaften festlegen. Normalerweise versuchen mobile Browser, Ihre Seiten in Desktopbreiten anzuzeigen, was den Text klein und schwer lesbar machen kann, ohne hineinzuzoomen. Um dies zu beheben, verwenden Sie das `viewport`-Meta-Tag, um mobilen Browsern mitzuteilen, dass sie den Seiteninhalt an die Breite des Ger\u00e4ts anpassen sollen. \n\n Dies macht Ihre Website nicht nur einfacher auf mobilen Ger\u00e4ten zu bedienen, sondern signalisiert auch Suchmaschinen, dass Ihre Website mobilfreundlich ist, was Ihre Platzierungen bei mobilen Suchanfragen verbessern kann. Ein gutes `viewport`-Tag, mit dem Sie beginnen k\u00f6nnen, ist `<meta name='viewport' content='width=device-width, initial-scale=1'>`. Dies legt Ihre Seitenbreite so fest, dass sie der Bildschirmbreite des Ger\u00e4ts entspricht und h\u00e4lt das initiale Zoomniveau bei 100%.\n"},
	"AvoidPlugins": {"message": "Verwenden Sie Browser-Plugins?"},
	"AvoidPluginsSummary": {"message": "Es ist am besten, die Verwendung von Browser-Plugins wie Java, Flash, ActiveX und Silverlight zur Hinzuf\u00fcgung von dynamischem Inhalt auf Ihren Seiten zu vermeiden. Diese Plugins k\u00f6nnen problematisch sein, da nicht jeder sie installiert hat und sie nicht auf allen Ger\u00e4ten unterst\u00fctzt werden - viele mobile Plattformen unterst\u00fctzen sie \u00fcberhaupt nicht. Dar\u00fcber hinaus k\u00e4mpfen Suchmaschinen oft damit, Inhalte zu indizieren, die auf diesen Plugins basieren. \n\n Stattdessen sollten Sie sich f\u00fcr L\u00f6sungen entscheiden, die gut \u00fcber alle Browser funktionieren und mobilfreundlich sind. Verwenden Sie beispielsweise anstelle von Flash f\u00fcr Videos - das auf mobilen Ger\u00e4ten nicht funktioniert - das HTML `<video>`-Tag. Dieses Tag wird auf allen Plattformen unterst\u00fctzt und kann leicht von Suchmaschinen indiziert werden, wodurch Ihr Inhalt f\u00fcr alle leichter zug\u00e4nglich ist.\n"},
	"UrlNames": {"message": "URL-Analyse"},
	"UseShortUrls": {"message": "Sind URLs kurz?"},
	"UseShortUrlsSummary": {"message": "Es ist eine gute Idee, Ihre Seiten-URLs kurz und b\u00fcndig zu halten. Warum? Weil k\u00fcrzere URLs in Suchergebnissen besser aussehen, sie sind einfacher f\u00fcr Menschen zu merken und sie werden weniger wahrscheinlich falsch getippt. Aber w\u00e4hrend Sie sie kurz halten, stellen Sie auch sicher, dass sie immer noch klar beschreiben, was auf der Seite ist. Anstatt einer langen URL wie `example.com/how-to-cook-bacon-wrapped-sirloin` k\u00f6nnten Sie etwas gestraffteres wie `example.com/bacon-wrapped-sirloin` w\u00e4hlen. Zielen Sie darauf ab, Ihre URLs unter 100 Zeichen zu halten, f\u00fcr die beste Balance zwischen Klarheit und Bequemlichkeit.\n"},
	"AvoidUnderscoresInUrls": {"message": "Gibt es Unterstriche in URLs?"},
	"AvoidUnderscoresInUrlsSummary": {"message": "Beim Erstellen von URLs ist es am besten, W\u00f6rter mit Bindestrichen anstatt Unterstrichen zu trennen. Google schl\u00e4gt dies vor, um Ihre URLs f\u00fcr alle leichter lesbar zu machen. Hier ist das Ding: Wenn Sie Unterstriche verwenden, um W\u00f6rter zu verbinden, k\u00f6nnten Suchmaschinen sie als ein gro\u00dfes Wort sehen, was normalerweise nicht gew\u00fcnscht ist. Verwenden Sie beispielsweise anstelle von `example.com/bacon_wrapped_sirloin` gehen Sie f\u00fcr `example.com/bacon-wrapped-sirloin`. Die Verwendung von Bindestrichen hilft sowohl Google als auch potenziellen Besuchern, Ihre URLs besser zu verstehen.\n"},
	"AvoidUrlExtensions": {"message": "Haben URLs Erweiterungen?"},
	"AvoidUrlExtensionsSummary": {"message": "Versuchen Sie, Ihre URLs sauber zu halten, indem Sie unn\u00f6tige Erweiterungen wie `.htm`, `.html`, `.shtml`, `.php`, `.jsp` und `.asp` vermeiden. Diese Erweiterungen beziehen sich auf die verwendete Backend-Technologie auf Ihrer Website, aber das ist normalerweise nicht wichtig f\u00fcr Ihre Besucher. Dar\u00fcber hinaus k\u00f6nnen sie sich im Laufe der Zeit \u00e4ndern und Ihre URLs l\u00e4nger machen, als sie sein m\u00fcssen. \n\n Wenn Menschen Ihre URLs in Suchergebnissen sehen, f\u00fcgen diese Erweiterungen keinen Wert hinzu und k\u00f6nnen sogar eine Ablenkung sein. Es ist besser, benutzerfreundlichere URLs zu verwenden, die keine Erweiterungen enthalten. Zum Beispiel anstatt `example.com/story.html` verwenden Sie einfach `example.com/story`. Es ist sauberer und angenehmer f\u00fcr die Augen.\n"},
	"AvoidUrlParams": {"message": "Hat die URL Parameter?"},
	"AvoidUrlParamsSummary": {"message": "Es ist am besten, Ihre URLs einfach und sauber zu halten, indem Sie URL-Parameter vermeiden, wenn Sie k\u00f6nnen. Parameter k\u00f6nnen URLs kompliziert und un\u00fcbersichtlich in Suchergebnissen erscheinen lassen. Zum Beispiel anstatt einer URL wie `example.com/display?topic=recipe`, die den Parameter `topic=recipe` hat und dadurch besch\u00e4ftigt aussieht, k\u00f6nnten Sie sie durch die Verwendung von Unterordnern vereinfachen. So k\u00f6nnte diese URL zu `example.com/display/recipe` sauber aufger\u00e4umt werden. Dieser Ansatz ist viel benutzerfreundlicher und sieht sauberer in Suchergebnissen aus.\n"},
	"AvoidSymbolsInUrls": {"message": "Enthalten URLs Symbole?"},
	"AvoidSymbolsInUrlsSummary": {"message": "Es ist eine gute Idee, Symbole aus Ihren URLs herauszuhalten und Optionen zu w\u00e4hlen, die einfacher zu lesen sind. Symbole wie `%`, `+` und `*` k\u00f6nnen Ihre URLs unordentlich und unattraktiv in Suchlisten erscheinen lassen. Typischerweise ben\u00f6tigen Sie in einer URL nur Buchstaben, Ziffern, Schr\u00e4gstriche und Bindestriche. Zum Beispiel anstatt einer URL wie `example.com/bacon+wrapped%20sirloin`, wo `+` und `%20` verwendet werden, um W\u00f6rter zu trennen, k\u00f6nnen Sie es aufr\u00e4umen, indem Sie Bindestriche verwenden: `example.com/bacon-wrapped-sirloin`. Dies sieht viel ordentlicher aus. Achten Sie auch auf `%20`, das in Ihren URLs auftaucht, da dies oft automatisch auftritt, wenn Leerzeichen von Backend-Systemen kodiert werden.\n"},
	"UseLowercaseUrls": {"message": "Sind URLs in Kleinbuchstaben?"},
	"UseLowercaseUrlsSummary": {"message": "Verwenden Sie nur Kleinbuchstaben in Ihren URLs. Dies ist wichtig, da einige Suchmaschinen und Webserver URLs als gro\u00df- und kleinschreibungsempfindlich ansehen, was bedeutet, dass URLs mit gemischten Gro\u00df- und Kleinbuchstaben zu Problemen f\u00fchren k\u00f6nnen. Zum Beispiel, wenn zwei URLs, die sich nur in der Buchstabengr\u00f6\u00dfe unterscheiden, auf dieselbe Seite zeigen, k\u00f6nnte dies als doppelter Inhalt markiert werden, was Ihre Suchrankings sch\u00e4digt. Dar\u00fcber hinaus sind URLs mit gemischten Gro\u00df- und Kleinbuchstaben schwieriger korrekt einzugeben, und manchmal findet der Server die Seite nicht, wenn die Schreibweise nicht genau stimmt. \n\n Im Allgemeinen ist es am besten, alle URL-Teile in Kleinbuchstaben zu schreiben, selbst f\u00fcr W\u00f6rter, die normalerweise mit einem Gro\u00dfbuchstaben beginnen. Anstatt Gro\u00dfbuchstaben zur Trennung von W\u00f6rtern zu verwenden, verwenden Sie Bindestriche. Zum Beispiel sollte eine URL wie `example.com/Bacon/Wrapped/Sirloin` zu `example.com/bacon-wrapped-sirloin` vereinfacht werden. Dies macht Ihre URLs sauberer und vermeidet potenzielle Probleme.\n"},
	"AvoidDeeplyNestedUrls": {"message": "Sind URLs verschachtelt?"},
	"AvoidDeeplyNestedUrlsSummary": {"message": "Halten Sie Ihre URL-Strukturen einfach und vermeiden Sie die Verwendung von zu vielen Unterordnern. Wenn URLs zu tief werden, wie `example.com/recipe/bacon/wrapped/sirloin/`, k\u00f6nnen sie lang, kompliziert und schwer zu lesen erscheinen. Zielen Sie auf einfachere, flachere Verzeichnisstrukturen ab, die es Benutzern erleichtern zu verstehen, wo sie sich auf Ihrer Website befinden, indem sie verwandte Seiten unter demselben Ordner gruppieren. Zum Beispiel k\u00f6nnten Sie die oben genannte URL auf `example.com/recipe/bacon-wrapped-sirloin` straffen und die Anzahl der Unterordner von vier auf zwei reduzieren. Eine gute Faustregel ist, nicht mehr als f\u00fcnf Unterordner in einer URL zu haben. Dies h\u00e4lt die Dinge ordentlich und leicht zu navigieren.\n"},
	"CodeValidation": {"message": "Code-Validierung"},
	"UseValidHTML": {"message": "Ist HTML g\u00fcltig?"},
	"UseValidHTMLSummary": {"message": "Stellen Sie sicher, dass Ihre Seiten keine HTML-Validierungsfehler haben. Wenn Ihr HTML-Code nicht korrekt ist, kann dies zu Problemen f\u00fchren, wie zum Beispiel, dass Ihre Seite f\u00fcr Benutzer nicht richtig angezeigt wird. Verschiedene Browser behandeln fehlerhaftes HTML unterschiedlich, daher ist es am besten, sich an g\u00fcltiges HTML zu halten. Au\u00dferdem k\u00f6nnen Suchmaschinen, die auf ung\u00fcltiges HTML sto\u00dfen, den Inhalt Ihrer Seite nicht korrekt interpretieren, was sich darauf auswirken kann, wie Ihre Website in Suchergebnissen erscheint. Ein sauberes HTML hilft sicherzustellen, dass alles reibungslos f\u00fcr sowohl Ihre Besucher als auch Suchmaschinen funktioniert.\n"},
	"UseValidCSS": {"message": "Ist CSS g\u00fcltig?"},
	"UseValidCSSSummary": {"message": "Stellen Sie sicher, dass Ihre CSS-Dateien keine Syntaxfehler haben. Fehler in Ihrem CSS k\u00f6nnen dazu f\u00fchren, dass Ihre Seiten nicht richtig aussehen, was bedeutet, dass Besucher Ihren Inhalt nicht so sehen, wie Sie es geplant haben. Au\u00dferdem, wenn Ihr CSS durcheinander kommt und Inhalte auf der Seite versteckt, k\u00f6nnte dies sogar Ihre Suchrankings beeinflussen. Google hat erw\u00e4hnt, dass Seiten f\u00fcr diese Art von Problem bestraft werden k\u00f6nnen. Also, Ihr CSS sauber und fehlerfrei zu halten, ist nicht nur wegen des guten Aussehens wichtig - es ist wichtig f\u00fcr die Benutzerfreundlichkeit Ihrer Website und f\u00fcr gute Leistungen in Suchergebnissen.\n"},
	"UseValidJavaScript": {"message": "Ist JavaScript g\u00fcltig?"},
	"UseValidJavaScriptSummary": {"message": "Halten Sie Ihre JavaScript-Dateien sauber und frei von Syntaxfehlern. JavaScript spielt eine gro\u00dfe Rolle bei der Gestaltung des Aussehens, Inhalts und Verhaltens Ihrer Website. Wenn es Fehler im JavaScript gibt, kann dies das Aussehen Ihrer Seiten ver\u00e4ndern und sogar die interaktiven Teile Ihrer Website unterbrechen. Dies kann zu einer frustrierenden Erfahrung f\u00fcr Ihre Besucher f\u00fchren und sogar Ihre Suchrankings sch\u00e4digen. Daher ist es wichtig, sicherzustellen, dass Ihr JavaScript fehlerfrei ist, um Ihre Website reibungslos zu halten und Ihre Besucher zufrieden zu stellen.\n"},
	"Links": {"message": "Link-Analyse"},
	"Use404CodeForBrokenUrls": {"message": "Geben kaputte URLs einen 404-Statuscode zur\u00fcck?"},
	"Use404CodeForBrokenUrlsSummary": {"message": "Wenn jemand eine URL auf Ihrer Seite anfordert, die nicht existiert, stellen Sie sicher, dass sie einen 404 HTTP-Statuscode zur\u00fcckgibt. Dies teilt Suchmaschinen mit, dass der Link kaputt ist, was besonders wichtig ist, wenn die URL noch nicht indexiert wurde. Es verhindert, dass Suchmaschinen eine nicht vorhandene Seite zu ihren Listen hinzuf\u00fcgen. Wenn eine Seite, die zuvor funktioniert hat, pl\u00f6tzlich einen 404-Code anzeigt, anstatt beispielsweise einen 200 (was bedeutet, dass alles in Ordnung ist), werden Suchmaschinen sie schlie\u00dfllich aus ihren Ergebnissen entfernen. Verwenden Sie daher den 404-Code nur f\u00fcr wirklich kaputte oder nicht vorhandene URLs. \n\n Der 404-Code ist auch entscheidend f\u00fcr Tools, die Ihre Website auf kaputte Links \u00fcberpr\u00fcfen - ohne ihn k\u00f6nnen diese Tools Sie nicht auf Probleme aufmerksam machen. F\u00fcr Ihre Besucher, wenn sie auf einen 404-Fehler sto\u00dfen, zeigen Sie eine freundliche 'Nicht gefunden'-Seite, die ihnen hilft, zu n\u00fctzlichen Inhalten zur\u00fcckzukehren.  \n\n Um zu testen, ob Ihre 404-Einrichtung korrekt funktioniert, versuchen Sie, eine URL auf Ihrer Seite zu besuchen, von der Sie wissen, dass sie nicht existiert, wie `/seo-checker-not-found-page`, und sehen Sie, ob sie korrekt einen 404-Status zur\u00fcckgibt. Wenn es ein Problem gibt, h\u00e4ngt die Behebung stark vom spezifischen Web-Framework und Server ab, den Sie verwenden. Sie m\u00fcssen m\u00f6glicherweise ein Tutorial suchen, das speziell auf Ihre Einrichtung zugeschnitten ist, um zu sehen, was angepasst werden muss.\n"},
	"AvoidBrokenInternalLinks": {"message": "Sind interne Links kaputt?"},
	"AvoidBrokenInternalLinksSummary": {"message": "Stellen Sie sicher, dass alle Links auf Ihrer Website korrekt funktionieren. Kaputte Links k\u00f6nnen verhindern, dass Suchmaschinen alle Teile Ihrer Seite finden, was bedeuten kann, dass einige Ihrer Seiten nicht den SEO-Schub erhalten, den sie sollten. Au\u00dferdem sind kaputte Links eine sichere Methode, Ihre Besucher zu frustrieren - wenn sie auf etwas klicken und es funktioniert nicht, werden sie nicht gl\u00fccklich sein. Alle Ihre internen Links reibungslos laufen zu lassen, hilft sowohl Ihrem SEO als auch Ihrer Benutzererfahrung.\n"},
	"AvoidBrokenExternalLinks": {"message": "Sind externe Links kaputt?"},
	"AvoidBrokenExternalLinksSummary": {"message": "Achten Sie auf alle Links auf Ihrer Seite, die auf externe Websites zeigen. Da Sie diese Seiten nicht kontrollieren, k\u00f6nnen die Links nicht funktionieren, wenn die externen Seiten verschoben oder gel\u00f6scht werden. Es ist eine gute Idee, diese Links regelm\u00e4\u00dfig zu \u00fcberpr\u00fcfen und sie bei Bedarf zu aktualisieren. Kaputte Links k\u00f6nnen dazu f\u00fchren, dass Suchmaschinen denken, Ihre Seite sei von niedriger Qualit\u00e4t, und sie \u00e4rgern definitiv Benutzer, die auf etwas klicken, das nicht funktioniert. Ihre externen Links in gutem Zustand zu halten, hilft, die Integrit\u00e4t Ihrer Seite zu erhalten und Ihre Besucher zufrieden zu stellen.\n"},
	"AvoidBrokenPageResources": {"message": "Sind Seitenressourcen kaputt?"},
	"AvoidBrokenPageResourcesSummary": {"message": "Stellen Sie sicher, dass alle Links zu Ressourcen wie Bildern, CSS und JavaScript auf Ihren Seiten korrekt funktionieren. Wenn diese Ressourcen nicht geladen werden, wird Ihr Inhalt m\u00f6glicherweise \u00fcberhaupt nicht angezeigt, er k\u00f6nnte falsch aussehen oder interaktive Elemente funktionieren nicht. Dies kann zu einer schlechten Erfahrung f\u00fcr Ihre Besucher f\u00fchren und sogar Ihre Suchrankings sch\u00e4digen. Alle diese Links in Topform zu halten, hilft sicherzustellen, dass Ihre Seite so aussieht und funktioniert, wie sie sollte, und bietet Ihren Besuchern ein reibungsloses Erlebnis.\n"},
	"UseRobotFiles": {"message": "Existiert robots.txt?"},
	"UseRobotFilesSummary": {"message": "Legen Sie eine robots.txt-Datei auf jedem Subdomain an, um zu steuern, wie Suchmaschinen mit Ihrer Seite interagieren, wie zum Beispiel, wo Ihre Sitemaps sind und welche Teile sie durchsuchen sollten oder nicht. Sie finden die robots.txt-Datei im Wurzelverzeichnis, und sie ist einfach `robots.txt` benannt. Denken Sie daran, eine robots.txt-Datei betrifft nur die URLs, die ihrer Position in Bezug auf Protokoll, Subdomain, Domain und Port entsprechen. Zum Beispiel gilt eine robots.txt-Datei unter `http://example.com/robots.txt` f\u00fcr URLs unter `http://example.com`, deckt aber nicht `https://example.com` oder `http://www.example.com` ab. \n\n Sogar eine leere robots.txt-Datei ist hilfreich, da sie Ihre Serverprotokolle aufr\u00e4umen kann, indem sie die 404-Fehler reduziert, die Bots generieren k\u00f6nnten, wenn sie diese Datei suchen und nicht finden k\u00f6nnen. Beachten Sie jedoch, dass das blo\u00dfe Sagen zu Suchbots, eine Seite nicht zu besuchen, durch robots.txt diese Seite nicht aus den Suchergebnissen versteckt - wenn andere Seiten darauf verlinken, k\u00f6nnte sie trotzdem erscheinen. Wenn Sie wirklich eine Seite aus den Suchergebnissen fernhalten wollen, verwenden Sie `noindex`-Meta-Tags auf der Seite selbst.\n"},
	"SetSitemapLocations": {"message": "Sind Sitemap-Standorte festgelegt?"},
	"SetSitemapLocationsSummary": {"message": "Jede robots.txt-Datei auf Ihrer Seite sollte darauf hinweisen, wo Ihre Sitemap-Dateien sind. Sitemaps sind wichtig, da sie alle Seiten auflisten, die Sie m\u00f6chten, dass Suchmaschinen finden und indizieren. Sie bieten auch n\u00fctzliche Details wie das letzte Update jeder Seite und wie oft die Seiten sich \u00e4ndern, was Suchmaschinen hilft, Ihre Seite effektiver zu durchsuchen. Sie k\u00f6nnen den Standort Ihrer Sitemap in Ihrer robots.txt-Datei mit einer einfachen Zeile wie `Sitemap: http://example.com/sitemap.xml` angeben. Und wenn Sie mehr als eine Sitemap haben, keine Sorge - Sie k\u00f6nnen mehrere Sitemaps in derselben robots.txt-Datei auflisten.\n"},
	"AvoidTempRedirects": {"message": "Gibt es tempor\u00e4re Weiterleitungen?"},
	"AvoidTempRedirectsSummary": {"message": "Wenn Sie eine Webseite von einer URL auf eine andere umleiten m\u00fcssen, ist es normalerweise besser, eine permanente Weiterleitung zu verwenden, die als 301-Weiterleitung bekannt ist. Dies teilt Suchmaschinen mit, dass die alte URL dauerhaft zur neuen ge\u00e4ndert wurde. Als Ergebnis aktualisieren Suchmaschinen ihre Datens\u00e4tze zur neuen URL und \u00fcbertragen jegliche Suchrangkraft, die die alte Seite hatte, auf die neue Seite. \n\n Andererseits sollten tempor\u00e4re Weiterleitungen (normalerweise ein 302- oder 307-Status) verwendet werden, wenn eine Seite nur vor\u00fcbergehend verschoben wird. Mit diesen aktualisieren Suchmaschinen ihre Links nicht zur neuen URL und \u00fcbertragen auch nicht das Link-Equity (die Rankingkraft). \n\n Wenn Sie eine Seite verschieben, die viele Backlinks hat, die darauf zeigen, ist es entscheidend, eine permanente Weiterleitung zu verwenden, um das Suchranking der Seite intakt zu halten. Dies hilft sicherzustellen, dass all dieser hart erarbeitete SEO-Wert nicht verloren geht.\n"},
	"AvoidMetaRedirects": {"message": "Gibt es Meta-Weiterleitungen?"},
	"AvoidMetaRedirectsSummary": {"message": "Es ist besser, serverseitige Weiterleitungen zu verwenden, anstatt sich auf Meta-Tags zu verlassen, um Ihre Webseiten umzuleiten. Meta-Tag-Weiterleitungen werden mit einem HTML-Tag durchgef\u00fchrt, das dem Browser sagt, nach einer bestimmten Zeit zu einer neuen URL zu wechseln, wie dies: `<meta http-equiv='refresh' content='5;http://example.com/final-destination'>`, was den Browser 5 Sekunden warten l\u00e4sst, bevor er zur neuen URL wechselt. \n\n Diese Art von Weiterleitungen hat jedoch einige Nachteile. Einige Suchmaschinen-Crawler folgen ihnen m\u00f6glicherweise nicht, sie k\u00f6nnen die 'Zur\u00fcck'-Schaltfl\u00e4che des Browsers durcheinander bringen, und es kann verwirrend f\u00fcr Benutzer sein, wenn eine Seite geladen wird, nur um wenige Sekunden sp\u00e4ter durch eine andere ersetzt zu werden. Organisationen wie Google und das W3C (World Wide Web Consortium) empfehlen die Verwendung von serverseitigen Weiterleitungen, weil sie diese Probleme vermeiden und sowohl f\u00fcr Benutzer als auch f\u00fcr Suchmaschinen zuverl\u00e4ssiger sind.\n"},
	"Overview": {"message": "\u00dcbersicht"},
	"AllUrls": {"message": "Alle URLs"},
	"AllUrlsSummary": {"message": "Alle von SEO Checker w\u00e4hrend des Crawls gefundenen URLs."},
	"InternalUrls": {"message": "Interne URLs"},
	"InternalUrlsSummary": {"message": "Alle internen URLs, die SEO Checker w\u00e4hrend des Crawls gefunden hat."},
	"ExternalUrls": {"message": "Externe URLs"},
	"ExternalUrlsSummary": {"message": "Alle externen URLs, die SEO Checker w\u00e4hrend des Crawls gefunden hat."},
	"FailingUrls": {"message": "Fehlgeschlagene URLs"},
	"FailingUrlsSummary": {"message": "Alle URLs, die einen 40x oder 50x Statuscode zur\u00fcckgegeben haben. Dies deutet darauf hin, dass sie nicht geladen wurden."},
	"StatusCodes": {"message": "Statuscodes"},
	"20xstatusSuccess": {"message": "20x Status - Erfolg"},
	"20xstatusSuccessSummary": {"message": "URLs, die einen Status zwischen 200 und 299 zur\u00fcckgegeben haben. Dies deutet darauf hin, dass sie erfolgreich geladen wurden."},
	"30xStatusRedirection": {"message": "30x Status - Weiterleitung"},
	"30xStatusRedirectionSummary": {"message": "URLs, die einen Status zwischen 300 und 399 zur\u00fcckgegeben haben. Dies deutet darauf hin, dass es sich um Weiterleitungen handelt."},
	"40xStatusClientError": {"message": "40x Status - Clientfehler"},
	"40xStatusClientErrorSummary": {"message": "URLs, die einen Status zwischen 400 und 499 zur\u00fcckgegeben haben. Dies deutet auf einen Clientfehler hin. Das bekannteste Beispiel daf\u00fcr ist der Status 404, der typischerweise auf einen toten oder kaputten Link hinweist."},
	"50xStatusServerError": {"message": "50x Status - Serverfehler"},
	"50xStatusServerErrorSummary": {"message": "URLs, die einen Status zwischen 500 und 599 zur\u00fcckgegeben haben. Dies deutet auf einen Serverfehler hin. Zum Beispiel deutet ein 500-Statuscode im Allgemeinen darauf hin, dass der Backend-Code auf einen unerwarteten oder nicht behandelten Fehler gesto\u00dfen ist."},
	"OtherStatus": {"message": "Anderer Status"},
	"OtherStatusSummary": {"message": "URLs, die keine Antwort erhalten haben, wie bei Timeouts und Verbindungsproblemen."},
	"Indexing": {"message": "Indizierung"},
	"PagesContainCanonicalLink": {"message": "Seiten, die darauf hinweisen, dass sie kanonisch sind, indem sie einen `canonical`-Link enthalten."},
	"CanonicalPages": {"message": "Kanonische Seiten"},
	"PagesNotContainCanonicalLink": {"message": "Seiten, die keinen `canonical`-Link enthalten."},
	"NoncanonicalPages": {"message": "Nichtkanonische Seiten"},
	"NoindexPages": {"message": "Noindex-Seiten"},
	"NoindexPagesSummary": {"message": "Seiten, die das `noindex`-Meta-Tag verwenden, um Suchmaschinen mitzuteilen, dass die Seiten nicht in Suchergebnissen aufgelistet werden sollen. Solche Seiten sollten _nicht_ in robots.txt-Dateien vom Crawlen blockiert werden, da dann die Suchmaschinen-Crawler das Meta-Tag nicht sehen und die Seite dann immer noch in Suchergebnissen erscheinen kann, wenn andere Seiten darauf verlinken."},
	"NofollowPages": {"message": "Nofollow-Seiten"},
	"NofollowPagesSummary": {"message": "Seiten, die Suchmaschinen mitteilen, keine Links auf dieser Seite zu verfolgen, indem sie ein `nofollow`-Meta-Tag enthalten."},
	"UrlTypes": {"message": "URL-Typen"},
	"PagesSummary": {"message": "Alle Seiten, die SEO Checker w\u00e4hrend des Crawls gefunden hat."},
	"CSS": {"message": "CSS"},
	"CssSummary": {"message": "Alle CSS-Dateien, die SEO Checker w\u00e4hrend des Crawls gefunden hat."},
	"JavaScript": {"message": "JavaScript"},
	"JavaScriptSummary": {"message": "Alle JavaScript-Dateien, die SEO Checker w\u00e4hrend des Crawls gefunden hat."},
	"Images": {"message": "Bilder"},
	"ImagesSummary": {"message": "Alle Bilddateien, die SEO Checker w\u00e4hrend des Crawls gefunden hat."},
	"RobotsSummary": {"message": "Alle robots.txt-Dateien, die SEO Checker w\u00e4hrend des Crawls gefunden hat."},
	"Sitemap": {"message": "Sitemap"},
	"SitemapSummary": {"message": "Alle Sitemap-Dateien, die SEO Checker w\u00e4hrend des Crawls gefunden hat."},
	"Other": {"message": "Sonstiges"},
	"OtherSummary": {"message": "Alle anderen Dateitypen, die SEO Checker w\u00e4hrend des Crawls gefunden hat."},
	"AllRedirectsCrawled": {"message": "Alle Weiterleitungen wurden durchsucht."},
	"redirectsSummary": {"message": "Alle Weiterleitungen, die SEO Checker w\u00e4hrend des Crawls gefunden hat."},
	"PermanentRedirects": {"message": "Permanente Weiterleitungen"},
	"PermanentRedirectsSummary": {"message": "Alle permanenten Weiterleitungen, die SEO Checker w\u00e4hrend des Crawls gefunden hat.. Diese sind durch einen 301-Statuscode (Dauerhaft verschoben) oder 308-Statuscode (Permanente Weiterleitung) gekennzeichnet."},
	"TempRedirects": {"message": "Tempor\u00e4re Weiterleitungen"},
	"TempRedirectsSummary": {"message": "Alle tempor\u00e4ren Weiterleitungen, die SEO Checker w\u00e4hrend des Crawls gefunden hat.. Diese sind durch einen 302-Statuscode (Gefunden), 303-Statuscode (Siehe Andere), 307-Statuscode (Tempor\u00e4re Weiterleitung) gekennzeichnet"},
	"OtherRedirects": {"message": "Andere Weiterleitungen"},
	"OtherRedirectsSummary": {"message": "Alle Weiterleitungen, die SEO Checker gefunden hat, die keinen Statuscode geben, der entweder eine tempor\u00e4re oder permanente Weiterleitung ist."},
	"Hidden": {"message": "Versteckt"},
	"Outlinks": {"message": "Ausgehende Links"},
	"Inlinks": {"message": "Eingehende Links"},
	"ResponseHeaders": {"message": "Antwort-Header"},
	"DocumentStructure": {"message": "Dokumentenstruktur"},
	"RedirectPath": {"message": "Weiterleitungspfad"},
	"UseHttps": {"message": "Wird HTTPS verwendet?"},
	"UseHttpsSummary": {"message": "Stellen Sie sicher, dass alle Ihre Seiten HTTPS verwenden, um die Sicherheit zu gew\u00e4hrleisten und die Privatsph\u00e4re Ihrer Besucher zu sch\u00fctzen. Wenn ein Browser regul\u00e4res HTTP verwendet, um eine URL zu laden, werden die Daten ungesch\u00fctzt \u00fcber das Internet \u00fcbertragen. Das bedeutet, dass Angreifer einen Blick auf die \u00fcbertragenen Daten werfen oder diese sogar \u00e4ndern k\u00f6nnen. Sie k\u00f6nnten Passw\u00f6rter und pers\u00f6nliche Informationen erfassen, Malware oder Anzeigen auf Ihre Seiten einschleusen oder Ihre Besucher auf sch\u00e4dliche Websites umleiten. \n\n Der Wechsel zu HTTPS verschl\u00fcsselt die Daten, die zwischen Ihrer Website und den Browsern \u00fcbertragen werden, und verhindert, dass Angreifer Ihre Kommunikation manipulieren oder abh\u00f6ren. Die Details zur Einrichtung von HTTPS h\u00e4ngen von Ihrem Server oder Hosting-Dienst ab. Sobald es eingerichtet ist, stellen Sie sicher, dass alle `http://` Anfragen automatisch auf `https://` umgeleitet werden, um die Sicherheit aller zu gew\u00e4hrleisten und die Privatsph\u00e4re zu wahren.\n"},
	"AvoidMixedContent": {"message": "Gibt es gemischten Inhalt?"},
	"AvoidMixedContentShortSummary": {"message": "Stellen Sie sicher, dass Ihre HTTPS-Seiten nur Ressourcen verwenden, die ebenfalls \u00fcber HTTPS bereitgestellt werden. Wenn Ihre sicheren Seiten Bilder, Skripte oder andere Inhalte \u00fcber einfaches HTTP laden, werden diese von Browsern als Sicherheitsrisiken gekennzeichnet und es k\u00f6nnen Warnungen an Ihre Besucher angezeigt werden. Dies kann dazu f\u00fchren, dass Ihre Website weniger vertrauensw\u00fcrdig erscheint. Sorgen Sie also daf\u00fcr, dass alle Ihre Seitenressourcen ebenfalls \u00fcber HTTPS geladen werden.\n"},
	"AvoidMixedContentSummary": {"message": "Wenn Sie Seiten haben, die HTTPS verwenden, stellen Sie sicher, dass alle Ressourcen auf diesen Seiten - wie Bilder, JavaScript, CSS und iframes - ebenfalls \u00fcber HTTPS geladen werden. Werden diese Ressourcen stattdessen \u00fcber HTTP geladen, k\u00f6nnen Browser dies als Sicherheitsrisiko erkennen, eine Situation, die als 'gemischter Inhalt' bekannt ist. Dies kann passieren, weil HTTP-Ressourcen nicht gesichert sind, was es Angreifern erm\u00f6glicht, sie zu ver\u00e4ndern. Wenn jemand beispielsweise eine JavaScript-Datei manipulieren k\u00f6nnte, die an einen Browser gesendet wird, k\u00f6nnte er sch\u00e4dlichen Code einschleusen, um Passw\u00f6rter zu stehlen oder Benutzer auf gef\u00e4hrliche Websites umzuleiten. \n\n Um Ihre Besucher zu sch\u00fctzen, blockieren Browser diese unsicheren Ressourcen und k\u00f6nnen 'gemischte Inhalte' Warnungen anzeigen, was Ihre Website weniger sicher erscheinen l\u00e4sst. Um diese Probleme zu vermeiden, stellen Sie sicher, dass Sie alle Ihre Seitenressourcen mit `https://` in ihren URLs einbinden, um alles konsistent und sicher zu halten.\n"},
	"UseSecurePasswordForms": {"message": "Sind Formulare mit Passw\u00f6rtern sicher?"},
	"UseSecurePasswordFormsShortSummary": {"message": "Stellen Sie sicher, dass jede Seite mit einem Passwortfeld sicher ist, indem Sie HTTPS verwenden. Wenn jemand sein Passwort eingibt, sollte es von einer HTTPS-Seite \u00fcber eine POST-Anfrage an eine andere HTTPS-URL gesendet werden. Diese Einrichtung hilft, das Passwort sicher und gesch\u00fctzt zu halten, w\u00e4hrend es \u00fcber das Internet \u00fcbertragen wird, und sch\u00fctzt es vor neugierigen Blicken.\n"},
	"UseSecurePasswordFormsSummary": {"message": "Wenn Sie Passwortfelder auf Ihrer Website haben, ist es entscheidend, diese sicher zu handhaben, um die Informationen Ihrer Benutzer zu sch\u00fctzen. Hier erfahren Sie, wie Sie sicherstellen k\u00f6nnen, dass Passw\u00f6rter sicher gesendet werden: \n\n 1. **Seiten \u00fcber HTTPS bereitstellen**: Dieser erste Schritt stellt sicher, dass die Seite selbst sicher ist und verhindert, dass Angreifer sie manipulieren, um Passw\u00f6rter umzuleiten. \n\n 2. **Das Formular-Action-Attribut auf eine HTTPS-URL setzen**: Stellen Sie sicher, dass das `action`-Attribut des Formulars auf eine HTTPS-URL zeigt (`<form action='https://...'>`). Diese Einrichtung stellt sicher, dass beim Absenden des Formulars die Daten, einschlie\u00dfllich Passw\u00f6rter, sicher gesendet werden, was es viel schwieriger macht, die Daten auf ihrem Weg zum Server abzufangen. \n\n 3. **POST f\u00fcr Formular\u00fcbermittlungen verwenden**: Das `method`-Attribut des Formulars sollte auf POST gesetzt sein (`<form method='POST'...>`). Diese Methode sendet Daten im K\u00f6rper der Anfrage anstatt in der URL. Es ist eine sicherere Methode, sensible Informationen zu \u00fcbertragen, da sie keine Spuren in Browserverl\u00e4ufen, Adressleisten, Serverprotokollen oder im `Referer`-Header hinterl\u00e4sst, wenn Benutzer zu anderen Seiten weiterklicken. \n\n Indem Sie diese Schritte befolgen, helfen Sie, die Passw\u00f6rter Ihrer Benutzer zu sch\u00fctzen, wenn sie sich anmelden oder auf Ihrer Seite registrieren.\n"},
	"UseHsts": {"message": "Wird HSTS verwendet?"},
	"UseHstsSummary": {"message": "Richten Sie HSTS (HTTP Strict Transport Security) auf Ihrer Website ein, um sicherzustellen, dass Browser immer HTTPS anstelle von HTTP verwenden, wenn sie Ihre Seite besuchen. So funktioniert es: Wenn ein Browser Ihre Seite erreicht und auf den `Strict-Transport-Security` Antwort-Header trifft, wechselt er automatisch alle zuk\u00fcnftigen `http://` Anfragen zu `https://` f\u00fcr Ihre Seite. Dies hilft, Benutzerdaten zu sichern, indem verschl\u00fcsselte Verbindungen durchgesetzt werden.\n"},
	"UseHstsPreload": {"message": "Wird HSTS-Preload verwendet?"},
	"UseHstsPreloadSummary": {"message": "Um die Sicherheit zu erh\u00f6hen, bevor jemand Ihre Seite besucht, erw\u00e4gen Sie, Ihre Seite zur HSTS-Preload-Liste hinzuzuf\u00fcgen. Hier ist der Deal: Normalerweise tritt Ihre HSTS-Richtlinie erst in Kraft, nachdem der Browser Ihrer Seite geladen wurde und auf einen HSTS-Antwort-Header gesto\u00dfen ist. Das bedeutet, dass es ein Fenster der Verwundbarkeit gibt, wenn ein neuer Besucher zum ersten Mal mit einer unsicheren HTTP-Verbindung auf Ihre Seite kommt. \n\n Um diese L\u00fccke zu schlie\u00dfen, k\u00f6nnen Sie Ihre Seite auf die 'HSTS-Preload-Liste' setzen lassen. Das bedeutet, dass Browser automatisch HSTS f\u00fcr Ihre Seite verwenden, sogar bevor der erste Besuch stattfindet. Um sich zu qualifizieren, muss der `Strict-Transport-Security`-Header Ihrer Seite in allen Antworten \u00fcber alle Subdomains hinweg eine `max-age` von mindestens einem Jahr (31,536,000 Sekunden) einschlie\u00dfen und muss sowohl die Optionen `includeSubDomains` als auch `preload` gesetzt haben. Der Header sollte so aussehen: `Strict-Transport-Security: max-age=31536000; includeSubDomains; preload`. \n\n Stellen Sie sicher, dass Sie die Gro\u00dfschreibung richtig bekommen, wie in `includeSubDomains`. Sobald Ihr Header korrekt eingerichtet ist, k\u00f6nnen Sie Ihre Seite zur Aufnahme in die Preload-Liste unter [https://hstspreload.org/](https://hstspreload.org/) einreichen.\n"},
	"ContentSniffing": {"message": "Inhalts-Schn\u00fcffeln"},
	"UseSniffingProtection": {"message": "Ist der Schutz vor Inhalts-Schn\u00fcffeln aktiviert?"},
	"UseSniffingProtectionSummary": {"message": "Um die Sicherheit Ihrer Website zu erh\u00f6hen, ist es eine gute Idee, das Schn\u00fcffeln von Inhalten durch den Browser zu deaktivieren. Hier ist der Grund: Manchmal versuchen Browser selbst herauszufinden, mit welcher Art von Inhalten sie es zu tun haben, besonders wenn der `Content-Type`-Header fehlt oder ungenau ist. Dieser Prozess, der als Inhalts-Schn\u00fcffeln bekannt ist, zielt darauf ab, die Benutzererfahrung zu verbessern, kann aber Sicherheitsrisiken \u00f6ffnen. \n\n Zum Beispiel, wenn Ihre Seite es Benutzern erlaubt, Bilder hochzuladen, k\u00f6nnte ein Angreifer dies ausnutzen, indem er eine Bilddatei hochl\u00e4dt, die tats\u00e4chlich mit JavaScript-Code versehen ist. Wenn ein Browser Inhalts-Schn\u00fcffeln verwendet, k\u00f6nnte er diese Datei f\u00e4lschlicherweise als ausf\u00fchrbares Skript lesen und das b\u00f6sartige Skript ausf\u00fchren. \n\n Um solche Schwachstellen zu verhindern, k\u00f6nnen Sie den `X-Content-Type-Options` Antwort-Header mit dem Wert `nosniff` verwenden. Diese Einstellung teilt den Browsern mit, dem `Content-Type`-Header explizit zu vertrauen und den Inhaltstyp nicht selbst zu erraten. Dieser einfache Schritt kann das Risiko von Inhalts-Schn\u00fcffel-Exploits erheblich verringern.\n"},
	"SetMimeTypes": {"message": "Sind MIME-Typen festgelegt?"},
	"SetMimeTypesSummary": {"message": "Stellen Sie sicher, dass jede Antwort von Ihrem Server korrekt seinen MIME-Typ angibt. Dies hilft den Browsern genau zu verstehen, mit welcher Art von Inhalten sie es zu tun haben. Wenn Sie den `X-Content-Type-Options: nosniff`-Header verwenden, teilen Sie den Browsern mit, den Inhaltstyp nicht zu erraten (ein Prozess, der als Inhalts-Schn\u00fcffeln bekannt ist). Stattdessen werden die Browser strikt dem folgen, was der `Content-Type`-Header sagt. \n\n Um jegliche Verwechslungen zu vermeiden und sicherzustellen, dass Ihr Inhalt korrekt angezeigt wird, setzen Sie immer den `Content-Type`-Header mit dem genauen MIME-Typ f\u00fcr jedes St\u00fcck Inhalt, das Sie bereitstellen. Dieser einfache Schritt kann helfen, Probleme zu vermeiden, bei denen Browser die Daten, die sie erhalten, falsch interpretieren, was zu Anzeige- oder Funktionsproblemen auf Ihrer Website f\u00fchren kann.\n"},
	"General": {"message": "Allgemein"},
	"Miscellaneous": {"message": "Verschiedenes"},
	"UseClickjackProtection": {"message": "Ist der Schutz vor Clickjacking aktiviert?"},
	"UseClickjackProtectionSummary": {"message": "Um sich gegen Clickjacking-Angriffe zu sch\u00fctzen, ist es klug zu kontrollieren, wie Ihre Seiten in iframes eingebettet werden k\u00f6nnen. Clickjacking tritt auf, wenn ein Angreifer Ihre Seite in einem iframe auf seiner eigenen Seite platziert. Sie k\u00f6nnten ihre eigene Benutzeroberfl\u00e4che dar\u00fcberlegen, um Besucher dazu zu verleiten, etwas zu klicken, das sie nicht sollten - wie das Teilen von Links, das Klicken auf Anzeigen oder sogar das Eingeben von Passw\u00f6rtern. Sie k\u00f6nnten auch Formularfelder \u00fcberlagern, um Daten zu schnappen. \n\n Um diese hinterh\u00e4ltigen Taktiken zu stoppen, verwenden Sie den `X-Frame-Options` Antwort-Header, um Grenzen zu setzen, wer Ihre Seiten einbetten kann. Hier sind Ihre Optionen: \n\n 1. **`DENY`** - Diese Option blockiert alle iframes, egal woher sie kommen. \n\n 2. **`SAMEORIGIN`** - Dies erlaubt iframes nur aus derselben Herkunft wie Ihre Seite. \n\n 3. **`ALLOW-FROM`** - Dies erm\u00f6glicht Ihnen, eine bestimmte Herkunft anzugeben, die Ihre Seiten einbetten kann. \n\n F\u00fcr maximale Sicherheit k\u00f6nnten Sie `X-Frame-Options: DENY` w\u00e4hlen, was alle iframe-Einbettungen stoppt. Es ist am besten, die restriktivste Einstellung zu w\u00e4hlen, die Ihren Bed\u00fcrfnissen entspricht, um Ihre Seite sicher zu halten.\n"},
	"UseXssProtection": {"message": "Ist der XSS-Schutz aktiviert?"},
	"UseXssProtectionSummary": {"message": "Um sich gegen XSS (Cross-Site Scripting) Angriffe zu sch\u00fctzen, ist es eine gute Idee, den Browser-XSS-Schutz zu aktivieren. XSS-Angriffe treten auf, wenn ein Angreifer es schafft, b\u00f6sartigen Code in eine Webseite einzuschleusen, die dann an Benutzer gesendet wird. Einige Browser bieten eingebauten Schutz gegen diese Angriffe, den Sie aktivieren k\u00f6nnen, indem Sie `X-XSS-Protection: 1; mode=block` zu den Antwort-Headern Ihrer Webseite hinzuf\u00fcgen. Mit dieser Einstellung, wenn der Browser einen XSS-Angriff erkennt, wird die Seite \u00fcberhaupt nicht gerendert, was den Angriff effektiv stoppt. \n\n Beachten Sie jedoch, dass dies Ihr Backup-Plan sein sollte, nicht Ihre erste Verteidigungslinie. Die beste Strategie ist, Ihre Website von Anfang an mit starken XSS-Schutzma\u00dfnahmen zu entwerfen. Stellen Sie sicher, dass Ihre Seite gr\u00fcndlich \u00fcberpr\u00fcft und gebaut ist, um jegliche Code-Injektionsversuche lange bevor sie einen Browser eines Benutzers erreichen, zu verhindern.\n"},
	"HideServerVersionData": {"message": "Sind Serverinformationen versteckt?"},
	"HideServerVersionDataSummary": {"message": "Um die Sicherheit Ihrer Website zu erh\u00f6hen, ist es ein kluger Schritt, Details \u00fcber die auf Ihrem Webserver laufende Software zu verbergen. Oft geben Webserver den Typ und die Version der verwendeten Software direkt in den Antwort-Headern an - zum Beispiel k\u00f6nnten Sie etwas wie `Server: Apache/2.4 (Win32) PHP/8.2` sehen, wenn eine Webseite angefordert wird. Diese Art von Informationen kann f\u00fcr Angreifer eine Goldgrube sein, die ihnen Hinweise auf m\u00f6gliche Schwachstellen zur Ausnutzung geben. \n\n Antwort-Header wie `Server`, `Powered-by`, `ASPNET` und `ASPNETMVC` enthalten oft diese Software-Details. Sie sollten Ihren Server so konfigurieren, dass diese Header unterdr\u00fcckt werden, um es Angreifern schwerer zu machen herauszufinden, womit sie es zu tun haben. \n\n Bedenken Sie jedoch, dass ein entschlossener Angreifer andere Wege finden k\u00f6nnte, um Details \u00fcber Ihr Server-Setup herauszufinden und Schwachstellen zu identifizieren, selbst ohne diese Header. Aber das Entfernen dieser Header erfordert normalerweise nicht viel Aufwand und kann dennoch dazu beitragen, Ihre Seite zu sch\u00fctzen, indem einfache Hinweise entfernt werden.\n"},
	"PageSize": {"message": "Seitengr\u00f6\u00dfenanalyse"},
	"UseCompression": {"message": "Ist die Komprimierung eingerichtet?"},
	"UseCompressionSummary": {"message": "Beschleunigen Sie Ihre Website, indem Sie Ihren Server so einstellen, dass Daten vor dem Senden komprimiert werden. Dies kann die Gr\u00f6\u00dfe komprimierbarer Dateien um etwa 60% bis 80% mit nur wenig Aufwand reduzieren. Es ist besonders wirksam f\u00fcr textbasierte Daten wie HTML, CSS, JavaScript, einfacher Text, XML, JSON und SVG. Diese sollten immer in komprimiertem Format gesendet werden.\n"},
	"AvoidRecompressingData": {"message": "Wird Daten neu komprimiert"},
	"AvoidRecompressingDataSummary": {"message": "Wenn es um die Komprimierung von Daten auf Ihrem Server geht, ist es wichtig, sich nur auf die Arten von Daten zu konzentrieren, die tats\u00e4chlich von der Komprimierung profitieren. Das bedeutet, die Komprimierung f\u00fcr Dateien zu \u00fcberspringen, die bereits in einem komprimierten Format vorliegen, wie JPG, PNG, MP4 und PDF-Dateien. Diese erneut zu komprimieren, wenn Ihre Website sie bereitstellt, ist nicht n\u00f6tig und k\u00f6nnte tats\u00e4chlich Serverressourcen verschwenden oder die Dateigr\u00f6\u00dfen erh\u00f6hen. \n\n Beschr\u00e4nken Sie sich darauf, Datentypen zu komprimieren, die effektiv komprimiert werden k\u00f6nnen, wie HTML, CSS, JavaScript und SVG-Dateien. Dieser Ansatz hilft, die Leistung Ihres Servers zu optimieren, ohne ihn zu \u00fcberlasten.\n"},
	"UseMinification": {"message": "Ist die Minimierung eingerichtet?"},
	"UseMinificationShortSummary": {"message": "Stellen Sie sicher, dass alle Ihre CSS- und JavaScript-Dateien minimiert sind. Dieser Prozess verringert die Dateigr\u00f6\u00dfen, indem unn\u00f6tige Leerzeichen, Kommentare und Zeichen entfernt werden. Es ist eine einfache M\u00f6glichkeit, die Last Ihrer Webseiten zu verringern, sodass sie schneller f\u00fcr Ihre Besucher laden.\n"},
	"UseMinificationSummary": {"message": "Um Ihre Webseiten schneller zu laden, erw\u00e4gen Sie, Ihre CSS- und JavaScript-Dateien zu minimieren. Minimierung ist eine Technik, bei der Sie unn\u00f6tige Dinge - wie Kommentare und zus\u00e4tzliche Leerzeichen - aus diesen Dateien entfernen. Dies \u00e4ndert nicht, wie der Code funktioniert, aber es macht die Dateien kleiner. Typischerweise k\u00f6nnen Sie die Dateigr\u00f6\u00dfen auf diese Weise um etwa 30% reduzieren. \n\n W\u00e4hrend die Komprimierung die Dateigr\u00f6\u00dfen noch weiter reduzieren kann, ist die Verwendung von Minimierung und Komprimierung zusammen die beste Strategie. Dies liegt daran, dass die Minimierung einige Daten vollst\u00e4ndig entfernt, w\u00e4hrend die Komprimierung alles nur enger zusammenpresst, ohne etwas zu entfernen. Indem Sie diese Methoden kombinieren, erhalten Sie viel kleinere Dateien, was Ihre Website schneller l\u00e4dt und einfacher zu navigieren macht.\n"},
	"AvoidInlineSourceMaps": {"message": "Werden Inline-Quellkarten verwendet?"},
	"AvoidInlineSourceMapsSummary": {"message": "Wenn Sie Ihre CSS- und JavaScript-Dateien minimieren, achten Sie darauf, die Quellkarten nicht direkt in sie einzubetten. Quellkarten sind f\u00fcr Entwickler super n\u00fctzlich, da sie es einfacher machen, den minimierten Code durch die Verkn\u00fcpfung mit dem urspr\u00fcnglichen, lesbareren Code zu debuggen. Normalerweise bieten Minimierungstools zwei M\u00f6glichkeiten: Sie k\u00f6nnen entweder die Quellkarte in einer separaten Datei ablegen oder sie direkt in die minimierte Datei einbetten. \n\n Das Einbetten von Quellkarten direkt in Ihre Dateien (Inlining) kann sie jedoch tats\u00e4chlich gr\u00f6\u00dfer machen als den urspr\u00fcnglichen minimierten Code, was irgendwie den Zweck des Minimierens im ersten Schritt zunichte macht. W\u00e4hrend der Entwicklung sind eingebettete Quellkarten in Ordnung, da sie beim schnellen Debuggen helfen. Aber f\u00fcr Ihre Live-Site (Produktion) ist es besser, Quellkarten extern zu halten. \n\n Um zu sehen, ob Ihre JavaScript- oder CSS-Datei eine eingebettete Quellkarte hat, suchen Sie einfach nach einem Kommentar wie `/* sourceMappingURL=data:` in Ihren Dateien. Dies zeigt an, dass die Quellkarte innerhalb der Datei selbst enthalten ist.\n"},
	"Caching": {"message": "Caching"},
	"UseCaching": {"message": "Wird Caching verwendet?"},
	"UseCachingSummary": {"message": "Aktivieren Sie das Caching f\u00fcr die Ressourcen Ihrer Website, damit Browser die bereits heruntergeladenen Dateien speichern und wiederverwenden k\u00f6nnen. Dies wird mit dem `Cache-Control` Antwort-Header gesteuert, der die Caching-Regeln f\u00fcr jede URL festlegt. Sie sehen Einstellungen wie `no-store`, die verhindern, dass Browser etwas cachen, und `no-cache`, die Browser dazu bringen, bei Ihrem Server zu pr\u00fcfen, ob die gecachte Version noch aktuell ist, bevor sie verwendet wird. \n\n F\u00fcr Ihre Seitenressourcen ist es am besten, `no-cache` und `no-store` zu vermeiden. Wenn diese nicht gesetzt sind, werden Browser Ressourcen cachen und sie beim n\u00e4chsten Mal sofort verwenden, ohne zur\u00fcck zum Server zu m\u00fcssen. Dies beschleunigt das Laden Ihrer Website f\u00fcr wiederkehrende Besucher. \n\n **Jedoch eine Warnung:** Sie m\u00fcssen einen Plan f\u00fcr die Aktualisierung dieser gecachten Ressourcen haben. Typischerweise sollten Sie die URL einer Ressource \u00e4ndern (zum Beispiel durch Hinzuf\u00fcgen einer Versionsnummer oder eindeutigen Zeichenfolge), wann immer Sie sie aktualisieren. Diese Technik, bekannt als 'Cache Busting', stellt sicher, dass Browser die neue Version herunterladen, anstatt die alte aus dem Cache zu verwenden. Viele Web-Frameworks handhaben dies automatisch f\u00fcr Sie.\n"},
	"UseLongCachingTimes": {"message": "Werden lange Caching-Zeiten verwendet?"},
	"UseLongCachingTimesSummary": {"message": "Richten Sie die Seitenressourcen Ihrer Website so ein, dass sie f\u00fcr lange Zeitr\u00e4ume gecacht werden. Das bedeutet, dass ein Browser, sobald er etwas wie ein Bild oder eine CSS-Datei heruntergeladen hat, diese behalten und ohne erneutes Herunterladen wiederverwenden kann, wenn jemand Ihre Website das n\u00e4chste Mal besucht. Sie k\u00f6nnen steuern, wie lange diese Dateien im Cache frisch bleiben, auf zwei Arten: \n\n 1) Verwenden Sie den `Expires`-Header, um ein genaues Datum und eine genaue Uhrzeit festzulegen, wann die Datei als veraltet betrachtet werden sollte, wie `Expires: Fri, 10 Aug 2019 20:00:00 GMT`. \n\n 2) Verwenden Sie den `Cache-Control`-Header mit einer `max-age`-Direktive, die dem Browser mitteilt, wie viele Sekunden die Datei als frisch betrachtet werden sollte, wie `Cache-Control: max-age=3600` f\u00fcr eine Stunde. \n\n Wenn Sie sowohl `max-age` als auch `Expires` verwenden, denken Sie daran, dass `max-age` die Einstellung `Expires` \u00fcberschreibt. \n\n Ich empfehle, Ihre Cache-Zeiten auf mindestens 24 Stunden einzustellen. Dies bietet eine gute Balance, h\u00e4lt Ihre Website f\u00fcr wiederkehrende Besucher schnell und speichert keine veralteten Versionen zu lange.\n"},
	"AvoidDuplicateResources": {"message": "Gibt es doppelte Ressourcen?"},
	"AvoidDuplicateResourcesSummary": {"message": "Um die Caching-Effizienz auf Ihrer Website zu steigern, stellen Sie immer sicher, dass dieselbe Seitenressource von derselben URL bereitgestellt wird. Browser cachen Dateien basierend auf ihren URLs, sodass sie eine gecachte Datei nur wiederverwenden, wenn sie von derselben URL wie zuvor angefordert wird. Wenn dieselbe Datei \u00fcber verschiedene URLs zug\u00e4nglich ist, kann dies unn\u00f6tige zus\u00e4tzliche Browseranfragen zur Folge haben. \n\n Zum Beispiel, stellen Sie sich vor, ein Browser hat eine Datei von `http://example.com/SEO Checker.js` gecacht. Wenn sp\u00e4ter derselbe Inhalt von leicht unterschiedlichen URLs wie `https://example.com/SEO Checker.js`, `http://www.example.com/SEO Checker.js`, `http://example.com/sc.js`, `http://example.com/libs/SEO Checker.js`, `http://example.com/SEO Checker.js?v=0.1&t=1` oder `http://example.com/SEO Checker.js?t=1&v=0.1` abgerufen werden muss, wird der Browser sie nicht als dieselbe erkennen aufgrund der Unterschiede in Protokoll, Subdomain, Pfad oder Abfragezeichenfolge. Infolgedessen wird er denselben Inhalt erneut f\u00fcr jede neue URL herunterladen. \n\n Um eine effiziente Cachierung zu gew\u00e4hrleisten, stellen Sie sicher, dass jede einzigartige Ressource auf Ihrer Website konsistent mit derselben URL \u00fcberall, wo sie referenziert wird, verlinkt ist. Dies h\u00e4lt Ihre Seiten schneller beim Laden f\u00fcr wiederkehrende Besucher, da ihre Browser effektiv gecachte Ressourcen wiederverwenden k\u00f6nnen.\n"},
	"AvoidExcessiveInlineCss": {"message": "Wird Inline-CSS verwendet?"},
	"AvoidExcessiveInlineCssSummary": {"message": "Die Verwendung externer CSS-Dateien anstelle von gro\u00dfen CSS-Bl\u00f6cken direkt in Ihren Seiten kann wirklich zur Effizienz des Cachings Ihrer Website beitragen. Wenn Sie CSS mit `style`-Attributen oder `<style>`-Tags einbetten, kann das w\u00e4hrend der Entwicklungsphase praktisch sein, aber es bedeutet, dass CSS, das \u00fcber mehrere Seiten hinweg geteilt wird, nicht vom Browser gecacht wird. \n\n Das gesagt, schl\u00e4gt Google vor, gerade genug CSS im Kopf Ihres Dokuments einzubetten, um den oberen Teil der Seite schnell zu rendern. Dieser Ansatz kann Ihre Website schneller wirken lassen, weil der sichtbare Teil der Seite sofort l\u00e4dt. Googles AMP (Accelerated Mobile Pages)-Projekt empfiehlt ebenfalls, CSS f\u00fcr jede Seite einzubetten, um die Anzahl der Anfragen zu reduzieren - aber nur, wenn es sich um eine bescheidene Menge handelt. \n\n Als allgemeine Regel versuchen Sie, die Menge an CSS, die Sie einbetten, unter 50.000 Bytes pro Seite zu halten. Dies hilft Ihnen, zwischen schnellen Anfangsladezeiten und guten Caching-Praktiken zu balancieren.\n"},
	"AvoidCssImport": {"message": "Wird CSS @import verwendet?"},
	"AvoidCssImportSummary": {"message": "Versuchen Sie, `@import` in Ihren CSS-Dateien zu vermeiden, da es verhindert, dass das CSS auf einmal geladen wird. Wenn Sie `@import` verwenden, um eine andere CSS-Datei \u00fcber ihre URL einzubinden, mag das praktisch erscheinen, aber es verlangsamt tats\u00e4chlich die Dinge. Hier ist der Grund: Der Browser kann die importierte Datei erst abrufen, nachdem die CSS-Datei, die den `@import` enth\u00e4lt, vollst\u00e4ndig heruntergeladen wurde. Diese sequenzielle Ladung verz\u00f6gert alles. \n\n Um die Dinge zu beschleunigen und Ihre CSS-Dateien gleichzeitig zu laden, ist es besser, jede CSS-Datei direkt in Ihrem HTML zu verlinken. Sie k\u00f6nnen dies tun, indem Sie f\u00fcr jede CSS-Datei ein `<link rel='stylesheet' href='...'>`-Tag im Kopf Ihres HTML hinzuf\u00fcgen. Diese Methode l\u00e4sst den Browser alle CSS-Dateien gleichzeitig laden, was Ihre Seite schneller f\u00fcr Benutzer erscheinen l\u00e4sst.\n"},
	"AvoidRenderBlockingJavaScript": {"message": "Wird render-blockierendes JavaScript verwendet?"},
	"AvoidRenderBlockingJavaScriptSummary": {"message": "Wenn Sie externes JavaScript zu Ihren Seiten hinzuf\u00fcgen, ist es wichtig, dies so zu tun, dass es nicht das Laden des Rests Ihrer Seite verlangsamt. Normalerweise, wenn Sie ein `<script src='...'>`-Tag in Ihr HTML einf\u00fcgen, stoppt es den Rest der Seite vom Laden, bis die JavaScript-Datei vollst\u00e4ndig heruntergeladen und ausgef\u00fchrt ist. Inline-JavaScript tut dasselbe und pausiert alles, bis es ausgef\u00fchrt wird. \n\n Um dies zu verhindern, k\u00f6nnen Sie Ihre `<script>`-Tags direkt vor dem schlie\u00dfenden `</body>`-Tag Ihres HTML platzieren. Auf diese Weise kann der Gro\u00dfteil Ihrer Seite laden, bevor der Browser sich mit den Skripten befassen muss. \n\n Eine weitere gute Strategie f\u00fcr externes JavaScript ist die Verwendung der Attribute `defer` oder `async` in Ihren Skript-Tags: \n\n - `<script defer src='...'>` stellt sicher, dass das Skript erst ausgef\u00fchrt wird, nachdem die ganze Seite geladen wurde (aber vor dem `DOMContentLoaded`-Ereignis). Skripte mit `defer` werden in der Reihenfolge ausgef\u00fchrt, in der sie auf der Seite erscheinen. \n\n - `<script async src='...'>` erlaubt es dem Skript, sofort nach dem Herunterladen ausgef\u00fchrt zu werden, ohne auf das vollst\u00e4ndige Laden der gesamten Seite zu warten. Dies kann zu einer schnelleren Leistung f\u00fchren, aber da `async`-Skripte in keiner bestimmten Reihenfolge ausgef\u00fchrt werden, funktionieren sie m\u00f6glicherweise nicht korrekt, wenn sie voneinander abh\u00e4ngig sind. \n\n Die Wahl zwischen `defer` und `async` h\u00e4ngt davon ab, ob Ihre Skripte in einer bestimmten Reihenfolge ausgef\u00fchrt werden m\u00fcssen. Dies ist etwas zu beachten, besonders wenn Ihre Skripte voneinander abh\u00e4ngig sind, um richtig zu funktionieren.\n"},
	"AvoidExcessiveInlineJavaScript": {"message": "Wird Inline-JavaScript verwendet?"},
	"AvoidExcessiveInlineJavaScriptSummary": {"message": "Es ist eine gute Idee, die Verwendung von Inline-JavaScript auf Ihren Webseiten zu vermeiden, um sie schneller zu laden und zu verbessern, wie effektiv sie gecacht werden k\u00f6nnen. Inline-JavaScript ist, wenn Sie Ihren JavaScript-Code direkt in Ihrem HTML mit dem `<script>`-Tag platzieren. W\u00e4hrend dies w\u00e4hrend der Entwicklungsphase praktisch sein kann, hat es ein paar Nachteile. Erstens kann es das Rendern Ihres HTML verlangsamen, weil der Browser anhalten muss und sich mit dem JavaScript befassen muss, bevor er fortfahren kann. Zweitens, wenn Sie dasselbe JavaScript \u00fcber mehrere Seiten hinweg verwenden, wird es nicht vom Browser gecacht, was bedeutet, dass es jedes Mal neu geladen werden muss. \n\n Ein besserer Ansatz ist, auf JavaScript als externe Dateien zu verlinken, die mit `<script src='...'>`-Tags verwendet werden, und sie so einzurichten, dass sie nach dem Rest Ihrer Seite geladen werden (defer loading). Es gibt jedoch Zeiten, in denen es Sinn macht, kleine JavaScript-Teile einzubetten, besonders wenn das Vermeiden einer zus\u00e4tzlichen Anfrage an den Server die Gesamtladezeit mehr beschleunigt, als durch das Caching gewonnen w\u00fcrde. \n\n Als allgemeine Regel versuchen Sie, Inline-JavaScript auf weniger als 10.000 Bytes pro Seite zu halten, um eine gute Leistung und Caching-Effizienz zu gew\u00e4hrleisten.\n"},
	"AvoidInternalLinkRedirects": {"message": "Werden interne Link-Umleitungen verwendet?"},
	"AvoidInternalLinkRedirectsSummary": {"message": "Um Ihre Website schneller f\u00fchlen zu lassen, wenn Benutzer von Seite zu Seite klicken, ist es eine gute Idee, Links zu URLs zu vermeiden, die auf andere URLs umleiten. Wenn Sie beispielsweise einen Link auf Ihrer Seite haben, der auf `/updates` zeigt, aber Sie haben diese Seite auf `/status` verschoben, wird jeder, der auf diesen Link klickt, eine Verz\u00f6gerung erleben, w\u00e4hrend sein Browser der Umleitung zur neuen Seite folgt. Um diese zus\u00e4tzliche Wartezeit zu eliminieren, aktualisieren Sie einfach Ihre Links, um direkt zur neuen URL zu gehen. Statt auf `/updates` zu verlinken, w\u00fcrden Sie direkt auf `/status` verlinken. Diese kleine \u00c4nderung kann Ihre Seite f\u00fcr Ihre Besucher viel schneller wirken lassen.\n"},
	"AvoidResourceRedirects": {"message": "Werden Ressourcenumleitungen verwendet?"},
	"AvoidResourceRedirectsSummary": {"message": "Um Ihre Website schnell zu laden, vermeiden Sie die Verwendung von URLs, die auf andere URLs f\u00fcr das Laden von Seitenressourcen wie CSS-Dateien umleiten. Wenn Sie beispielsweise auf eine CSS-Datei unter `example.com/design.css` verlinken, die auf `www.example.com/design.css` umleitet, verursacht diese Umleitung eine Verz\u00f6gerung beim Laden der Datei. Um die Dinge zu beschleunigen, verlinken Sie direkt zum Endziel (`www.example.com/design.css`). Auf diese Weise schneiden Sie den unn\u00f6tigen Umweg ab und helfen Ihren Seiten, schneller zu laden.\n"},
	"AvoidRedirectChains": {"message": "Werden Umleitungssequenzen verwendet?"},
	"AvoidRedirectChainsSummary": {"message": "Wenn Sie eine Umleitung auf Ihrer Website verwenden m\u00fcssen, versuchen Sie, es bei einer einzigen Umleitung zu belassen, statt einer Serie davon. Beispielsweise k\u00f6nnte eine h\u00e4ufige, aber unoptimierte Konfiguration eine URL von `http://example.com` zu `https://example.com` und dann schlie\u00dflich zu `https://www.example.com` umleiten. Diese zus\u00e4tzlichen Schritte, bekannt als Umleitungssequenzen, k\u00f6nnen das Laden Ihrer Seite erheblich verlangsamen. Sie k\u00f6nnen sogar Suchmaschinen davon abhalten, der endg\u00fcltigen URL zu folgen, was Ihre Suchrankings beeintr\u00e4chtigen k\u00f6nnte. \n\n Um die Dinge schnell und effizient zu halten, sollten Sie die Umleitungsregeln Ihres Servers anpassen, um unn\u00f6tige Umleitungen zu eliminieren oder zumindest auf eine einzige Umleitung zu reduzieren, wann immer m\u00f6glich. Auf diese Weise k\u00f6nnen sowohl Ihre Benutzer als auch Suchmaschinen viel schneller dorthin gelangen, wo sie hin m\u00fcssen.\n"},
	"Title": {"message": "Titel"},
	"FirstH1": {"message": "Erstes H1"},
	"H1sToFix": {"message": "Zu korrigierende H1s"},
	"Length": {"message": "L\u00e4nge"},
	"PagesWithSameH1": {"message": "Seiten mit demselben H1"},
	"URL": {"message": "URL"},
	"Description": {"message": "Beschreibung"},
	"CanonicalUrl": {"message": "Kanonische URL"},
	"Issue": {"message": "Problem"},
	"CanonicalUrlStatus": {"message": "Kanonische URL gab Statuscode $1"},
	"CanonicalUrlRedirects": {"message": "Kanonische URL leitet um"},
	"CanonicalUrlNotIndexable": {"message": "Kanonische URL nicht indizierbar: NOINDEX gesetzt"},
	"CanonicalUrlPointsToCanonicalizedPage": {"message": "Kanonische URL zeigt auf kanonisierte Seite"},
	"CanonicalUrlNotPage": {"message": "Kanonische URL ist keine Seite"},
	"CanonicalUrlNotSet": {"message": "Kanonische URL nicht gesetzt"},
	"PagesWithSameTitle": {"message": "Seiten mit gleichem Titel"},
	"PagesWithSameDescription": {"message": "Seiten mit gleichen Beschreibungen"},
	"AvoidDuplicatePages": {"message": "Doppelte Seiten vermeiden"},
	"DataUniqueHash": {"message": "Eindeutiger Datenhash"},
	"DuplicatePages": {"message": "Doppelte Seiten"},
	"WordCount": {"message": "Wortanzahl"},
	"MissingAltTags": {"message": "Fehlende ALT-Tags"},
	"ImageUrl": {"message": "Bild-URL"},
	"ViewportSetting": {"message": "Viewport-Einstellung"},
	"PluginTags": {"message": "Plugin-Tags"},
	"UrlLength": {"message": "URL-L\u00e4nge"},
	"Extension": {"message": "Erweiterung"},
	"UrlParams": {"message": "URL-Parameter"},
	"Subfolders": {"message": "Unterordner"},
	"HtmlErrors": {"message": "HTML-Fehler"},
	"CssErrors": {"message": "CSS-Fehler"},
	"JsErrors": {"message": "JS-Fehler"},
	"setNotFoundPage": {"message": "'Set a 'not found' page"},
	"RedirectTarget": {"message": "Umleitungsziel"},
	"HttpResponseCode": {"message": "HTTP-Antwortcode"},
	"BrokenLinks": {"message": "Defekte Links"},
	"BrokenResources": {"message": "Defekte Ressourcen"},
	"AddRobotFiles": {"message": "robots.txt-Dateien hinzuf\u00fcgen"},
	"SpecifySitemapLocations": {"message": "Sitemap-Standorte angeben"},
	"MetaRedirectTarget": {"message": "Meta-Umleitungsziel"},
	"AvoidTemporaryRedirects": {"message": "Tempor\u00e4re Umleitungen vermeiden"},
	"RedirectStatus": {"message": "Umleitungsstatus"},
	"CompressSentData": {"message": "Gesendete Daten komprimieren"},
	"ContentEncoding": {"message": "Inhaltskodierung"},
	"Minified": {"message": "Minimiert"},
	"MinifyFiles": {"message": "Dateien minimieren"},
	"AvoidInlineSourcemaps": {"message": "Inline-Quellkarten vermeiden"},
	"SourcemapFree": {"message": "Ohne Quellkarte"},
	"AvoidInlineJavaScript": {"message": "Inline-JavaScript vermeiden"},
	"InlineJsChars": {"message": "Inline-JS-Zeichen"},
	"DeferJavaScriptLoading": {"message": "JavaScript-Laden verz\u00f6gern"},
	"BlockingJsFiles": {"message": "Blockierende JS-Dateien"},
	"BlockingJavaScriptUrl": {"message": "BlockierendeJavaScriptUrl"},
	"AvoidInlineCss": {"message": "Inline-CSS vermeiden"},
	"InlineCssBytes": {"message": "Inline-CSS-Bytes"},
	"CssImports": {"message": "CSS-Importe"},
	"RedirectingOutlinks": {"message": "Weiterleitende Ausg\u00e4nge"},
	"outlinks": {"message": "ausg\u00e4nge"},
	"RedirectingOutlink": {"message": "Weiterleitender Ausgang"},
	"RedirectingResources": {"message": "Weiterleitende Ressourcen"},
	"ChainLength": {"message": "Kettenl\u00e4nge"},
	"AllowCaching": {"message": "Caching erlauben"},
	"CacheDisablingOptions": {"message": "Caching-deaktivierende Optionen"},
	"CacheTimeUsed": {"message": "Verwendete Cache-Zeit"},
	"CachedTimeInMins": {"message": "Gecachte Zeit (Minuten)"},
	"DataUniqueHashValue": {"message": "EindeutigerHashWert der Daten"},
	"DuplicateResources": {"message": "Doppelte Ressourcen"},
	"AvoidMixedContentErrors": {"message": "Fehler durch gemischten Inhalt vermeiden"},
	"InsecureResources": {"message": "Unsichere Ressourcen"},
	"InsecureResource": {"message": "Unsichere Ressource"},
	"SecurePasswordsFields": {"message": "Sichere Passwortfelder"},
	"HttpsPage": {"message": "HTTPS-Seite"},
	"PostAction": {"message": "POST-Aktion"},
	"HttpsAction": {"message": "HTTPS-Aktion"},
	"EnableHsts": {"message": "HSTS aktivieren"},
	"HstsMaxAge": {"message": "HSTS-Maximalalter"},
	"IncludeSubDomains": {"message": "Subdomains einschlie\u00dfen"},
	"AllowHstsPreload": {"message": "HSTS-Vorladen erlauben"},
	"PreloadSet": {"message": "Vorladen eingestellt"},
	"HstsExpiry": {"message": "HSTS-Ablauf"},
	"SpecifyMimeTypes": {"message": "MIME-Typen angeben"},
	"ContentTypeHeader": {"message": "Content-Type-Header"},
	"DisableContentSniffing": {"message": "Inhalts-Schn\u00fcffeln deaktivieren"},
	"XContentTypeOptionsHeader": {"message": "X-Content-Type-Options-Header"},
	"RestrictIframeUsage": {"message": "Iframe-Nutzung einschr\u00e4nken"},
	"xFrameOptions": {"message": "x-frame-options"},
	"EnableXssProtection": {"message": "XSS-Schutz aktivieren"},
	"XXssProtectionHeader": {"message": "X-XSS-Protection-Header"},
	"ServerVersionHeaders": {"message": "Serverversions-Header"},
	"CrawledUrlsSummary": {"message": "Alle URLs, die SEO Checker gecrawlt hat."},
	"InternalUrlsLargeSummary": {"message": "Dies sind URLs, die zur Website geh\u00f6ren, die Sie untersuchen. Sie sind Teil derselben Domain und f\u00fchren Sie zu anderen Seiten innerhalb derselben Website."},
	"ExternalUrlsLargeSummary": {"message": "Dies sind URLs, die Sie au\u00dferhalb der Website f\u00fchren, die Sie \u00fcberpr\u00fcfen. Sie k\u00f6nnten Links zu anderen Websites oder Ressourcen wie Bilder und Skripte sein, die auf unterschiedlichen Domains gehostet werden."},
	"SuccessStatus": {"message": "2xx-Statuscode - Erfolg"},
	"SuccessStatusSummary": {"message": "Alle URLs, die einen 'Erfolg'-Statuscode zur\u00fcckgegeben haben (Statuscodes zwischen 200 und 299)."},
	"RedirectionStatus": {"message": "3xx-Statuscode - Umleitung"},
	"RedirectionStatusSummary": {"message": "Alle URLs, die den Browser dazu veranlasst haben, eine Umleitung durchzuf\u00fchren (Statuscodes zwischen 300 und 399)."},
	"ClientErrorStatus": {"message": "4xx-Statuscode - Clientfehler"},
	"ClientErrorStatusSummary": {"message": "Alle URLs, die einen \"Clientfehler\"-Statuscode zur\u00fcckgegeben haben (Statuscodes zwischen 400 und 499). Der bekannteste davon ist ein 404-Fehlercode, wenn eine Seite unter der angeforderten URL nicht gefunden werden konnte."},
	"ServerErrorStatus": {"message": "5xx-Statuscode - Serverfehler"},
	"ServerErrorStatusSummary": {"message": "Alle URLs, die einen \"Serverfehler\"-Statuscode zur\u00fcckgegeben haben (Statuscodes zwischen 500 und 599). Dies bedeutet in der Regel, dass der Backend-Servercode auf einen Fehler gesto\u00dfen ist."},
	"ConnectionErrors": {"message": "Verbindungsfehler"},
	"ConnectionErrorSummary": {"message": "Alle URLs, zu denen keine Verbindung hergestellt werden konnte. Dazu geh\u00f6ren alle URLs, die zu lange zum Laden brauchten, URLs mit Umleitungssequenzen, die \u00fcber die maximale L\u00e4nge hinausgingen, und URLs, die zu DNS-Adresssuchfehlern f\u00fchrten."},
	"BrokenUrlSummary": {"message": "URLs, die einen 4xx-Status, einen 5xx-Status hatten oder nicht verbunden werden konnten."},
	"PagesWithoutCanonicalTag": {"message": "Seiten ohne kanonischen Tag"},
	"Canonicalization": {"message": "Kanonisierung"},
	"PagesWithoutCanonicalTagSummary": {"message": "Jede Seite, die keine `rel=\"canonical\"` URL angibt."},
	"PagesWithCanonicalTag": {"message": "Seiten mit kanonischem Tag"},
	"PagesWithCanonicalTagSummary": {"message": "Jede Seite, die eine `rel=\"canonical\"` URL angibt."},
	"CanonicalisedPages": {"message": "Kanonisierte Seiten"},
	"CanonicalisedPageSummary": {"message": "Jede Seite, die angibt, dass eine URL, die sich von ihrer eigenen unterscheidet, die kanonische Version mit ihrer `rel=\"canonical\"` URL ist."},
	"SelfCanonicalPages": {"message": "Selbst-kanonisierte Seiten"},
	"SelfCanonicalPageSummary": {"message": "Jede Seite, die angibt, dass ihre eigene URL kanonisch ist, mit ihrer `rel=\"canonical\"` URL."},
	"IndexablePages": {"message": "Indizierbare Seiten"},
	"IndexablePageSummary": {"message": "Seiten, die wahrscheinlich von Suchmaschinen indiziert werden. Diese sind Seiten, die 1) kein `noindex`-Meta-Tag haben und 2) entweder kein `rel=\"canonical\"`-Tag haben oder ein `rel=\"canonical\"`-Tag mit einer URL haben, die auf sich selbst verweist."},
	"NonIndexablePages": {"message": "Nicht-indizierbare Seiten"},
	"NonIndexablePageSummary": {"message": "Seiten, die m\u00f6glicherweise nicht von Suchmaschinen indiziert werden. Entweder haben diese Seiten ein `noindex`-Meta-Tag gesetzt oder sie haben ein `rel=\"canonical\"`-Tag, das auf eine URL verweist, die sich von ihrer eigenen unterscheidet."},
	"NoindexPageLargeSummary": {"message": "Jede Seite, die angibt, dass sie nicht in Suchergebnissen aufgef\u00fchrt werden soll, weil sie ein `noindex`-Meta-Tag enth\u00e4lt. Beachten Sie, dass Seiten, die durch eine robots.txt-Datei blockiert werden, immer noch in Suchergebnissen erscheinen k\u00f6nnen, wenn andere Seiten darauf verlinken."},
	"BlockSearchEngineIndexing": {"message": "Blockieren der Indizierung durch Suchmaschinen mit Meta-Tags"},
	"RedirectChain": {"message": "Umleitungssequenz"},
	"UrlInRedirectPath": {"message": "URL im Umleitungspfad"},
	"PathPosition": {"message": "Pfadposition"},
	"Headers": {"message": "Header"},
	"HeaderName": {"message": "Headername"},
	"Value": {"message": "Wert"},
	"Show": {"message": "Anzeigen"},
	"redirects": {"message": "Umleitungen"},
	"hidden": {"message": "versteckt"},
	"PrintOrSavePdf": {"message": "Drucken oder als PDF speichern"},
	"NoneFound": {"message": "Keine gefunden"},
	"ErrorSiteNotReachable": {"message": "Fehler: Website ist nicht erreichbar"},
	"CrawlerSettings": {"message": "Crawlereinstellungen"},
	"NoFileSelected": {"message": "Keine Datei ausgew\u00e4hlt!"},
	"ExportDataToJsonFile": {"message": "Crawl als JSON exportieren"},
	"ImportPreviousData": {"message": "Crawl aus JSON importieren"},
	"retryConnectMessage": {"message": "Verbindung zu $1 konnte nicht hergestellt werden. Erneuter Versuch in $2 Sekunden..."},
	"CrawlingStoppedDueToNetworkError": {"message": "Der Crawl wurde aufgrund eines Netzwerkfehlers gestoppt."},
	"ImageAnalysis": {"message": "BILDERANALYSE"},
	"AreImagesCompressed": {"message": "Sind die Bilder komprimiert?"},
	"AreImagesCompressedSummary": {"message": "Dies wird \u00fcberpr\u00fcfen, ob die Bilder komprimiert wurden und zeigt den Benutzern die Bilder oben an, die nicht komprimiert wurden."},
	"AreResolutionsTooHigh": {"message": "Sind die Aufl\u00f6sungen zu hoch?"},
	"AreResolutionsTooHighSummary": {"message": "Dies wird \u00fcberpr\u00fcfen, ob das Bild eine H\u00f6he von mehr als 1440 Pixeln oder eine Breite von mehr als 2560 Pixeln hat. Wenn ein Bild gr\u00f6\u00dfer ist, wird es oben in der Liste angezeigt."},
	"AreFileSizesTooLarge": {"message": "Sind die Dateigr\u00f6\u00dfen zu gro\u00df?"},
	"AreFileSizesTooLargeSummary": {"message": "Dies wird die Gr\u00f6\u00dfe der Bilddatei \u00fcberpr\u00fcfen. Wenn die Gr\u00f6\u00dfe mehr als 200 KB betr\u00e4gt, schl\u00e4gt die \u00dcberpr\u00fcfung fehl, und diese Bilder sollten oben angezeigt werden."},
	"Compressed": {"message": "Komprimiert"},
	"ResolutionTooHigh": {"message": "Aufl\u00f6sung zu hoch"},
	"FileSizeTooLarge": {"message": "Dateigr\u00f6\u00dfe zu gro\u00df"},
	"CrawlingPaused": {"message": "Crawling pausiert"},
	"PauseCrawl": {"message": "Crawl pausieren"},
	"ContinueCrawl": {"message": "Crawl fortsetzen"}
}